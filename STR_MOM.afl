 //list 0: SPY, index based trading both momentum and reversion
//list 1 : QQQ,DIA: market in range: mean reversion. 
// list 2:  QQQ,DIA,DWTI or UWTI when in trend 
// lis 3: any sector ETF in trend so  only momentum strategy
// list 4: Stocks with momentum 
//list 5: stocks in mean reversion range


//market in range : LIST 2

OptimizerSetEngine("cmae"); // you can also use "spso" or "trib" here


_SECTION_BEGIN("Trading Set up");
//Filename = _DEFAULT_NAME();
SubmitOrders = True; 
Tracing = False;    
MarketON=093000; TradeON = 094000; TradeOFF =153000; MarketOFF=160000; LM=155500;
US_ON = TimeNum() >= 093000 AND TimeNum() <=160000;
US_OFF = TimeNum() > 160000 ;//day's over*/
US_Trade_On=TimeNum() >= 094000 AND TimeNum() <=153000;
MarketLM=TimeNum() >=155500 AND Now( 4 )<=160000;
ABName=Name();//getfndata("Alias");
//IBName =Name();//getfndata("Alias");
//target_pro=1.001;//Optimize("target_profit",1.0005,1.0003,1.01,0.0005 );
_SECTION_END();




_SECTION_BEGIN("Variables");
sentiment=ParamList("sentiment", "N|NeU|P", 1);
rating=ParamList("rating", "Z|O|TW|TH|F", 2);
manualON=ParamList("manual on SPY", "0|1", 0); 

// # weekly High OR Low is range. SL OR profit target above this point. if price in this range then RANGE 
L_W=TimeFrameGetPrice( "L", inWeekly, -1 ); 
H_W=TimeFrameGetPrice( "H", inWeekly, -1 ); 
// # price above Yesterday closing is TRADING ON for long and triger of short sell  
C_YDay = TimeFrameGetPrice("C", inDaily, -1); // yesterdays close https://www.amibroker.com/guide/h_timeframe.html
L_hour=TimeFrameGetPrice("L",inHourly, -1);// TimeFrameExpand( ma5_13, in5Minute)
H_hour=TimeFrameGetPrice("H",inHourly, -1);// TimeFrameExpand( ma5_13, in5Minute)
C_hour=TimeFrameGetPrice("C",inHourly, -1);// TimeFrameExpand( ma5_13, in5Minute)
O_hour=TimeFrameGetPrice("O",inHourly, -1);// TimeFrameExpand( ma5_13, in5Minute)
C_5Min=TimeFrameGetPrice("C", in5minute, -1);// TimeFrameExpand( ma5_13, in5Minute)
H_5min=TimeFrameGetPrice("H",in5minute,-1);
L_5min=TimeFrameGetPrice("L",in5minute,-1);
H_Min=TimeFrameGetPrice("H", in1minute, -1);// TimeFrameExpand( ma5_13, in5Minute)
L_Min=TimeFrameGetPrice("C", in1minute, -1);// TimeFrameExpand( ma5_13, in5Minute)
C_Min=TimeFrameGetPrice("C", in1minute, -1);// TimeFrameExpand( ma5_13, in5Minute)
_SECTION_END();

_SECTION_BEGIN("OPTIMIZATION");
//const_SPY =Optimize("const",3,0.5, 5, 0.1 );
const =3.6;
//ADX_T_SPY=Optimize("ADX_T",35,15,65,1 );
ADX_T=48;
//ST_SPY=Optimize("ST",15,10,25,1 );
ST=15;
//MT_SPY=Optimize("MT",40,30,50,1 );
MT=30;
//inv_SPY=Optimize("investment",45000,30000,60000,1000 );
inv_SPY=45000;
_SECTION_END();

_SECTION_BEGIN("PIVOT points");
average = (Ref(H_hour,-1)+Ref(L_hour,-1)+Ref(O_hour,-1)+Ref(C_hour,-1))/4;
R2=average+(H_hour-L_hour);
R1=average*2-L_hour;
S1=average*2-H_hour;
S2=average-(H_hour-L_hour);

//# ATR based
ARC = const * ATR(ST);
SIC_H = Ref(HHV(H_Min,ST) - ARC,-1);//long
SIC_L = Ref(LLV(L_Min,ST) + ARC,-1);//Short
SICmin=(SIC_H-SIC_L)/2+C_hour;//ATC H and L based 
SDsic = StDev(SICmin,ST);
uplineSIC = SICmin + 1.2*SDsic;
dnlineSIC =SICmin - 1.2*SDsic;

//#sell or cover line or R2/S2
SD=StDev(O,MT);
sellline=C_hour +2*SD;
coverline=C_hour -2*SD;

_SECTION_END();

_SECTION_BEGIN("MOM STRATEGY");//HEDGING by SPXL,SPXU,SPXS 2000K amount for 23 SPY ( approximation)
// open higher the resistance buy and lower than reistance short
v1 = IIf(V>0,Volume,1);
//# VWAP trigger line
TodayVolume = Sum(V1,MT);
//average = (Ref(H,-1)+Ref(L,-1)+Ref(O,-1)+Ref(C,-1))/4;
VWAP = Sum (average * v1,MT ) / TodayVolume;

//#momentum indicator based
buy_MOM=Cross(Ref(vwap,-1),R2) AND InWatchList(2);//AND O_SPY>VWAP_SPY
short_MOM=Cross(S2,VWAP)  AND InWatchList(2);// momentum with predicted value and MR with ROC
sell_MOM=Cross(O,sellline) AND InWatchList(2);// both sell and cover should with position >0
Cover_MOM= Cross(coverline,O) AND InWatchList(2);



//list three for rated 5 stocks
//list four stocks are technical based for both buy or sell

_SECTION_END();


_SECTION_BEGIN("SIGNAL");

Buy=buy_MOM ;//list 0 with single lev ETF for mean reversion and list 1 with x3 liv ETFs for contra
Short=short_MOM ;
sell=sell_MOM;
cover=cover_MOM;

Buy=ExRem(Buy,Sell);
sell=ExRem(Sell,Buy);
short=ExRem(Short,cover);
cover=ExRem(cover,Short);
LastBuy = LastValue(Buy);
LastShort = LastValue(Short);
LastSell = LastValue(Sell);
LastCover = LastValue(Cover);
e = Equity(1,0);
start = ParamDate( "Start Date", "2016-04-01" );
end=ParamDate("End Date", "2016-08-01" );
Lprofit = e - ValueWhen( Buy, e); 
Sprofit = e - ValueWhen( Short, e); 
_SECTION_END();


_SECTION_BEGIN("PLOT"); 

Plot(O, "Open", IIf( Flip(Buy or cover,Sell OR short), colorlime,  colorred), styleline);
Plot(VWAP,"VWAP",colorLightBlue,styleline);
Plot(R2,"R2",colorGreen,styleline);
Plot(S2,"S2",colorRed,styleline);
Plot(sellline,"sellline",colorLightYellow,styleline);
Plot(coverline,"coverline",colorLightYellow,styleline);


PlotShapes(IIf(Buy, shapeHollowCircle, shapeNone),colorGreen, 0,L, Offset=-50);
PlotShapes(IIf(Short,shapeHollowCircle, shapeNone),colorRed, 0, H, Offset=40);
//Plot(e,"Equity",colorlightBlue,styleLeftAxisScale);
PlotShapes(IIf(Cover,shapeHollowCircle, shapeNone),colorLightGrey, 0, L, Offset=-40);
PlotShapes(IIf(Sell, shapeHollowCircle, shapeNone),colorLightOrange, 0,H, Offset=50);
_SECTION_END();


ordersize=200;//LastValue(inv_SPY/C_SPY);

	

_SECTION_BEGIN("AMI-IB Trigger");
ibc = GetTradingInterface("IB");
IBcStatus = ibc.IsConnected();
IBPosSize = ibc.GetPositionSize(ABName);
IBcStatusString = WriteIf(IBCStatus==0,"TWS Not Found",WriteIf(IBCStatus==1,"Connecting to TWS",WriteIf(IBCStatus==2,"TWS OK",WriteIf(IBCStatus==3,"TWS OK (msgs)",""))));
OldOrderID = StaticVarGetText("OrderID"+ABName);
if (OldORderID == "" && (LastBuy || LastShort))
{
    StaticVarSetText("OrderID"+ABName,"DUMMY");
}
excessfundCAD=ibc.GetAccountValue("[CAD]BuyingPower");
    
if (excessfundCAD =="")
    excessfund = 0;
else
   excessfund = StrToNum(excessfundCAD);  

 AccountCutout =excessfund<10000; 
 LastOrderID = StaticVarGetText("OrderID"+ABName);
 ORderStatus="";



if( IBcStatus )
{
	OrderID = StaticVarGetText("OrderID"+ABName);
    BuyPending=ibc.IsOrderPending(OrderID);
    SellPending=ibc.IsOrderPending(OrderID);
    averageprice=ibc.GetPositionInfo(ABName, "Avg. cost");
    IBPosSize = ibc.GetPositionSize(ABName);
  	ORderStatus = ibc.GetStatus( OrderID , True );
	if( ORderStatus != "" ) StaticVarSetText("OrderStatus"+ABName,ORderStatus);
	BuyPending=ibc.IsOrderPending(OrderID);
	SellPending=ibc.IsOrderPending(OrderID);
	Min_RTS=LastValue(GetRTDataForeign("Bid",Name()))-ibc.GetPositionInfo(Name(), "Avg. cost"); 
	Min_RTC=ibc.GetPositionInfo(Name(), "Avg. cost")-LastValue(GetRTDataForeign("Bid",Name()));
	minSProfit=Min_RTS>0.06;
	minCProfit=Min_RTC>0.06;
	positionclearLong=LastValue(GetRTDataForeign("Ask",Name()))<(ibc.GetPositionInfo(Name(), "Avg. cost")-0.15) OR TimeNum()==154500;
	positionclearShort=LastValue(GetRTDataForeign("Bid",Name()))>(ibc.GetPositionInfo(Name(), "Avg. cost")+0.15) OR TimeNum()==154500;
	printf("average price:"+"\t"+averageprice+"\n");
	printf("position list:"+"\t"+IBPosSize+"\n");
	printf("min sell profit:"+"\t"+minSProfit+"\n");
	printf("min cover profit:"+"\t"+minCProfit+"\n");
	BP= IBPosSize==0 AND LastValue(MarketON) AND AccountCutout==0 AND LastBuy;
	SHP= IBPosSize==0 AND LastValue(MarketON) AND AccountCutout==0 AND LastShort ;
    SP=IBPosSize>0 AND LastValue(minSProfit) AND LastSell ;//list two for stocks, stop loss only for stocks 
	CP=IBPosSize>0 AND LastValue(minCProfit) AND LastCover;
	size=IIf( (LastBuy OR  LastShort),ordersize,abs(IBPosSize)); 
	
	buyorcov=BP OR CP OR LastValue(positionclearShort);
	sellorshort=SHP OR SP OR LastValue(positionclearLong);
    
	if(buyorcov)  //BUY
    {
		OID= ibc.PlaceOrder( Name(), "BUY",Size, "MKT",0, 0, "Day", True); 
        ORderStatus = ibc.GetStatus( OID, True);
        if(ORderStatus == "Filled"){
        StaticVarSetText("OrderID"+ABName,OID);
        }
        for (dummy=0; dummy<40; dummy++) ibc.Sleep(50);  //Usually takes up to about a second for TWS to get acknowledgement from IB
        if (SubmitOrders)
        {
            for (dummy=0; dummy<40; dummy++) ibc.Sleep(50);  //Usually takes up to about a second for TWS to get acknowledgement from IB

             tradetime=GetPerformanceCounter()/1000; 
             while ((GetPerformanceCounter()/1000 - tradetime) <5) // give up after 5 seconds
             {
                 ibc.Reconnect();  //Refreshes ibc, and gets accurate status
                 //ORderStatus = ibc.GetStatus( OID, True);
                 if (ORderStatus == "PreSubmitted" || ORderStatus == "Submitted" || ORderStatus == "Filled")
                     break;
             }
        }
                     
    }
      
  	
	
    if(sellorshort)  //SHORT SELL
    {
        OID= ibc.PlaceOrder( Name(), "SELL",Size, "MKT",0, 0, "Day", True); 
         ORderStatus = ibc.GetStatus( OID, True);
        if(ORderStatus == "Filled"){
        StaticVarSetText("OrderID"+ABName,OID);
        }
        
        //for (dummy=0; dummy<40; dummy++) ibc.Sleep(50);  //Usually takes up to about a second for TWS to get acknowledgement from IB
        if (SubmitOrders)
        {
            for (dummy=0; dummy<40; dummy++) ibc.Sleep(50);  //Usually takes up to about a second for TWS to get acknowledgement from IB

             tradetime=GetPerformanceCounter()/1000; 
             while ((GetPerformanceCounter()/1000 - tradetime) <5) // give up after 5 seconds
             {
                 ibc.Reconnect();  //Refreshes ibc, and gets accurate status
                 //ORderStatus = ibc.GetStatus( OID, True);
                 if (ORderStatus == "PreSubmitted" || ORderStatus == "Submitted" || ORderStatus == "Filled")
                     break;
             }
        }
                     
    }
    
    
    ibc.ClearList(4);//error list clearing
	/*j=0;
	for( i = 0; ( symbol = StrExtract( pendinglist, i ) ) != ""; i++ ) //pending cancellation
		{ 
			if(symbol==Name())//getfndata("Alias")
			{
			j++;
			} 
		}
	if(j>1){
		for( i = 1;i<j; i++ ){
		ibc.CancelAllPendingOrders(name());
			}
		}*/
  
  // Note LastOrderID will remain "" while waiting for price improvement so we may skip entering for the whole of the bar
  
  //Exploration
IBcStatusString = WriteIf(IBCStatus==0,"TWS Not Found",WriteIf(IBCStatus==1,"Connecting to TWS",WriteIf(IBCStatus==2,"TWS OK",WriteIf(IBCStatus==3,"TWS OK (msgs)",""))));
LastOrderID = StaticVarGetText("OrderID"+ABName);
ORderStatus = ibc.GetStatus( LastOrderID , True );
if( ORderStatus != "" ) StaticVarSetText("OrderStatus"+ABName,ORderStatus);


    }
else IBPosSize = 0;

/*Title = Filename+":"+ABName+"\n"+" Trading Mode:"+WriteIf( SubmitOrders," -Create and Transmit"," - Create Only")+"\n"+" Last Signal: "+WriteIf(LastBuy,"BUY",WriteIf
(LastShort,"SHORT","NoSignal"))+"\n"+" IB Status: "+IBcStatusString+"\n"+" Last OrderID:"+LastOrderID+","+"\n"+" OrderStatus:"+ORderStatus+WriteIf(ORderStatus=="Error",ibc.GetLastError( LastOrderID
),"")+"," + "LastTime:  "+DateTimeToStr(LastValue(DateTime()))+"\n";*/

Filter=(Buy OR Short OR Sell OR Cover) AND LastOrderID!="DUMMY";// AND  Status("lastbarinrange");
AddTextColumn(FullName(),"name",200);
AddColumn(Buy,"Buy",1.0);
AddColumn(Short,"Short",1.0);
AddColumn(Sell,"Sell",1.0);
AddColumn(Cover,"Cover",1.0);
AddColumn(IIf(SubmitOrders,Asc("Y"),Asc("N")),"Transmit",formatChar);
AddColumn(IIf(Buy OR Cover,Asc("L"),IIf(Short OR Sell,Asc("S"),Asc(" "))),"Buy/Sell",formatChar);
AddColumn(IIf(Buy,BuyPrice,ShortPrice),"Entry",1.2);
AddTextColumn(IBcStatusString,"IBC Status",100);
//AddTextColumn(LastOrderID,"LastOID",1.0);
//AddTextColumn(ORderStatus,"OrderStatus",1.0);

/*
tradeend = Sell;
profit = e - ValueWhen( Buy, e );
endprofit = IIf( tradeend , profit, 0 );
LosingTrades = LastValue( Cum( endprofit < 0 ) );
WiningTrades = LastValue( Cum( endprofit > 0 ) );
TotalTrades = LastValue( Cum( tradeend ) );
AddColumn( LosingTrades, "Losing trades", 1 );
AddColumn( WiningTrades, "Wining trades", 1 );
AddColumn( TotalTrades, "Total trades", 1 );



// now we will count the number of
// count trades winning in given $ ranges
NumRanges = 25; // number of ranges to generate
RangeSize = 100; // controls $ size of the range

for( i = 0; i < NumRanges; i++ )
{
  rangestart = i * RangeSize;
  rangeend = (i+1)*RangeSize;
  if( i == NumRanges - 1 ) rangeend = 999999;
  AddColumn(
  LastValue( 100* Cum( endprofit > rangestart AND endprofit < rangeend ) /TotalTrades ),
  "% with profit " + rangestart + ".." + rangeend );
}

for( i = 0; i < NumRanges; i++ )
{
  rangestart = (-i - 1 ) * RangeSize;
  rangeend = -i*RangeSize;
  if( i == NumRanges - 1 ) rangestart = -999999;
  AddColumn(
  LastValue( 100* Cum( endprofit > rangestart AND endprofit < rangeend ) /TotalTrades ),
  " % with loss " + rangeend + ".." + rangestart );
}

*/

/*
Filter=1;
AddColumn(C, "Close price",1.2, colorDefault, colorDefault,100);
AddColumn(YDayC, "Last Day Close",1.2, colorDefault, colorDefault,100);
AddColumn(ROC(C,5), "ROC",1.2, colorDefault, colorDefault,100);
AddColumn(ADX(10), "ADX",1.2, colorDefault, colorDefault,100);
AddColumn(SIC_spread, "SIC_spread",1.4, colorDefault, colorDefault,100);
AddColumn(angle, "angle",1.2, colorDefault, colorDefault,100);
AddColumn(slope, "slope",1.4, colorDefault, colorDefault,100);
AddColumn(hist, "hist",1.2, colorDefault, colorDefault,100);
AddColumn(Percentile (SIC_spread,15, 99), "p99-SIC_spread",1.4, colorDefault, colorDefault,100);
AddColumn(Percentile (angle,15, 99), "p99-rsi",1.4, colorDefault, colorDefault,100);
AddColumn(Percentile (slope,15, 99), "p99-SLOPE",1.4, colorDefault, colorDefault,100);
AddColumn(Percentile (hist,15, 99), "p99-hist",1.4, colorDefault, colorDefault,100);
AddColumn(Percentile (SIC_spread,15,1), "p01-SIC_spread",1.4, colorDefault, colorDefault,100);
AddColumn(Percentile (angle,15,1), "p01-rsi",1.4, colorDefault, colorDefault,100);
AddColumn(Percentile (slope,15,1), "p01-SLOPE",1.4, colorDefault, colorDefault,100);
AddColumn(Percentile (hist,15,1), "p01-hist",1.4, colorDefault, colorDefault,100);
AddColumn(RSIa(SIC_spread,5), "rsi-SIC_spread",1.4, colorDefault, colorDefault,100);
AddColumn(RSIa(angle,5), "rsi-ANGLE",1.4, colorDefault, colorDefault,100);
AddColumn(RSIa(slope,5), "rsi-SLOPE",1.4, colorDefault, colorDefault,100);
AddColumn(RSIa(hist,5), "rsi-hist",1.4, colorDefault, colorDefault,100);
*/

_SECTION_END();


_SECTION_BEGIN("Alert"); 
//AlertIf( Buy, "EMAIL", "Buy Alert in "+FullName()+ "@"+BuyPrice,1 );
//AlertIf( Sell, "EMAIL", "Sell Alert in "+FullName()+ "@"+SellPrice,1 );
//AlertIf( Short, "EMAIL", "Short Alert in "+FullName()+ "@"+ShortPrice,3 );
//AlertIf( Cover, "EMAIL", "Short Alert in "+FullName()+ "@"+CoverPrice,3 );
_SECTION_END();