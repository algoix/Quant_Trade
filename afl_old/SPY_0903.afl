// list 0: SPY, index based trading both momentum and reversion
//list 1:any index other than SPY
// list 2:3x OIL when oil is in trend, so only momentum strategy
// lis 3:3x index 
//list 4: sector specific stocks in trend momentum strategy
//list5: Stocks bullish

//ML using python

// STRATEGY:
// buy/short/sell/cover based on indicator. Minimum profit above 0.05
// If market goes against then based on ML jump and AFL point clear the position by twice the holding. If holding -1000 then cover 2000. So holding changed to 1000.


OptimizerSetEngine("cmae"); // we can use "spso" or "trib" here
_SECTION_BEGIN("Trading Set up");
//Filename = _DEFAULT_NAME();
SubmitOrders = True; 
Tracing = False;    
MarketON=093000;
US_Trade_On=TimeNum() >= 094000 AND TimeNum() <=153000;
printf("US_Trade_On:"+"\t"+US_Trade_On+"\n");
ABName="SPY";//IBName =Name();//getfndata("Alias");
Bars_so_far_today = 1 + BarsSince( Day() != Ref(Day(), -1));
printf("Bars already for today:"+"\t"+Bars_so_far_today+"\n");
_SECTION_END();



_SECTION_BEGIN("SPY-Variables");
SetForeign(ABName);
O_SPY = O;
H_SPY = H;
L_SPY = L;
C_SPY = C;
v_SPY = IIf(V==0,1,Volume);
RestorePriceArrays();

C_YDay_SPY = TimeFrameGetPrice("C_SPY", inDaily, -1); // yesterdays close https://www.amibroker.com/guide/h_timeframe.html
H_YDay_SPY = TimeFrameGetPrice("H_SPY", inDaily, -1);
L_YDay_SPY = TimeFrameGetPrice("L_SPY", inDaily, -1);
C_5Min_SPY=TimeFrameGetPrice("C_SPY", in5minute, -1);// TimeFrameExpand( ma5_13, in5Minute)
L_5Min_SPY=TimeFrameGetPrice("L_SPY",in5minute, -1);// TimeFrameExpand( ma5_13, in5Minute)
H_5min_SPY=TimeFrameGetPrice("H_SPY",in5minute,-1);
O_5min_SPY=TimeFrameGetPrice("O_SPY",in5minute,-1);

// Useful to find state of market
printf("Yesterday High %g\n",H_YDay_SPY);
printf("Yesterday Low %g\n",L_YDay_SPY);
printf("Yesterday Low %g\n",C_YDay_SPY);

//Useful for normalization
SP_SPY=ValueWhen(Bars_so_far_today==600,O);
printf("Start price %g\n",SP_SPY);

// SENTIMENT

opening_jump=ValueWhen(Bars_so_far_today==1,O)-C_YDay_SPY;
present_jump=O_SPY-C_YDay_SPY;
sentiment_jump=present_jump/opening_jump;
Sentiment_range= HHV(sentiment_jump,60) -LLV(sentiment_jump,60);
sentiment_pol=(sentiment_jump-(HHV(sentiment_jump,60) -LLV(sentiment_jump,60))/2)/Sentiment_range;
sentiment_pol_p=Sum(IIf(sentiment_pol>Ref(sentiment_pol,-1) AND sentiment_pol>0,1,0),60);
sentiment_pol_n=Sum(IIf(sentiment_pol<Ref(sentiment_pol,-1) AND sentiment_pol<0,-1,0),60);
sentiment=IIf(sentiment_pol>0,sentiment_pol_p,sentiment_pol_n);
sentiment_ZScore = (sentiment - MA(sentiment,60 ) ) / StDev(sentiment,60);
printf("sentiment %g\n",sentiment_ZScore);
//NEED to add LSTM/NN twitter input
// polarized sentiment are  mean reverting. Price level at any market state will break up or down based on this ! [20,-20]

Bars_since_sent_p = 1 + BarsSince(sentiment_ZScore >5);
Bars_since_sent_n = 1 + BarsSince(sentiment_ZScore <-5);
Bars_since_sent_p=IIf(Bars_since_sent_p>60,0,Bars_since_sent_p);
Bars_since_sent_n=IIf(Bars_since_sent_n>60,0,Bars_since_sent_n);
price_diff_since_sent_p=O_SPY-Ref(O_SPY,-Bars_since_sent_p);
price_diff_since_sent_n=O_SPY-Ref(O_SPY,-Bars_since_sent_n);


//Normalized data==ND. ND >1 == buy if ND<1 sell short
ND=O_SPY/SP_SPY;
printf("Market UP/DOWN %g\n",ND);


//ACTIVE market
ACTV1=v_SPY>50 AND v_SPY>MA(v_SPY,60)*0.75;
ACTV2=IIf(O_SPY>Ref(C_SPY,-1) AND ACTV1,1,IIf( O_SPY<Ref(C_SPY,-1) AND ACTV1,-1,0));
ACTV_p=Sum(IIf(O_SPY>Ref(C_SPY,-1) AND ACTV1,1,0),60);
ACTV_n=Sum(IIf(O_SPY<Ref(C_SPY,-1) AND ACTV1,-1,0),60);
ACTV=IIf(ND>1,ACTV_p,ACTV_n);
printf("ACTIVE %g\n",ACTV);

// VELOCITY
// velocity per 5m above 0.25 is high speed.  
velocity_5m=(O_SPY-Ref(O_SPY,-60))/0.25;
velocity=Sum(IIf(abs(velocity_5m)>1,1,0),60);
Bars_since_high_vel = 1 + BarsSince(velocity>10);
Bars_since_high_vel=IIf(Bars_since_high_vel>60,0,Bars_since_high_vel);
price_diff_since_high_vel=O_SPY-Ref(O_SPY,-Bars_since_high_vel);
printf("Bars_since_high_vel %g\n",Bars_since_high_vel);//
printf("Price change from high Vel %g\n",price_diff_since_high_vel);//
// velocity increases above 20 can lead to reversion

_SECTION_END();



_SECTION_BEGIN("OPTIMIZATION"); //##//SPY//
//inv_SPY=Optimize("investment",45000,30000,60000,1000 );
_SECTION_END();

_SECTION_BEGIN("SPY STRATEGY");//HEDGING by SPXL,SPXU,SPXS 2000K amount for 23 SPY ( approximation)

// SENSE(predict),THINK,ACT-->REWARD. Reinforcement Learning
//1. State of Market: NS,JS. If SPY between UL and LL then NS. If Above UL then jumped up and if below LL then jumped down. 
	// Market moves reveresed back from JS to NS. PREDICT: 1. NS,JS 2.Reversion time. Need to use ML with NEWS/Sentiment feature
	// If Change state is predicted, JS ==1 and reversion time more than 1 day then Momentum  Strategy
	// If NS==1 and reversion time less or equal 1 then mean reversion
	 
//2. SENSE: Active,[NS,JS],Reversion Time 
	//THINK: Hedging,Trading, based on reward Sense was right/wrong(backpropagation)?,barsince B/SS >60 UP/DN to stop trading, and angle stiff/normal
	// ACT: Buy,Short Sell,Further Buy or Short sell.[SPY,SPXL,SPXS],change based on backpropagation,stop trading if angle and barsice against


	// Feature generation		
	//#PIVOTS to get ACTIVE,TRADE/TREND,JU/JD situation
price=(Ref(H_SPY,-1)+Ref(L_SPY,-1)+Ref(C_SPY,-1))/3;
R1=price*2-Ref(L_SPY,-1);
R2=price+(Ref(H_SPY,-1)-Ref(L_SPY,-1));
S1=price*2-Ref(H_SPY,-1);
S2=price-(Ref(H_SPY,-1)-Ref(L_SPY,-1));
totalVolume = Sum(Ref(v_SPY,-1),12);
VWAP = Sum (price *Ref(v_SPY,-1),12) /totalVolume;

//# price and VWAP difference
spread=O_SPY-VWAP;
spread_p=Sum(IIf(spread>MA(spread,3),1,0),60);
spread_n=Sum(IIf(spread<MA(spread,3),-1,0),60);
spread_vwap=IIf(ACTV>8 AND sentiment>25,spread_p, IIf(ACTV>8 AND sentiment<-25,spread_n,0));


//ROC for mean reversion
spyROC_p=Sum(IIf(ROC(price,3)>ROC(price,2),1,0),60);// change for 15 sec in 5 min window
spyROC_n=Sum(IIf(ROC(price,3)<ROC(price,2),-1,0),60);// change for 15 sec in 5 min window
spyROC=IIf(ACTV>8 AND sentiment>25,spyROC_p,IIf(ACTV<-6 AND sentiment<-25,spyROC_n,0));
//spyROC_ZScore = (spyROC - MA(spyROC,60 ) ) / StDev(spyROC,60);


//#retracement 24%,38%,50%,62% and 124%. NEED to optimize



			//##SENSEing the market situation [[[1]]]
			//##ACTIVE market ==ACTV_B for buy and ACTV_SS for sell short


	
				//## UP trend or DOWN trend [UT,DT] [[[[2]]]
UT=(HHV(H_SPY,60) + HHV(H_SPY-L_SPY,60)*0.75-0.02);
DT=(LLV(L_SPY,60) + LLV(H_SPY-L_SPY,60)*0.75+0.02);



				//JUMP State [[3]]	
				//Jump up above UL ==JU and Jump down below LL=JD. Trade zone =t_zone, when market between UL and LL.
				// Trade Zone==t_zone and jump zone==j_zone
				//#Jump up or Jump dn [10%,80%,10%]
		        //## Based market situation
//##we can SENSE [NS,JS] normal or JS state.[-1,0,+1]
	// zone =ZN
	// NS==0,TS=[1,-1]
	// Both cases market should me active 
// CAUTION manual input from premarket or prediction. LOGIC: First candle price +0.5 is UL and -0.5 is LL.
// NEED to optimize 0.5 or ??
		//SP_SPY if untrend market,
		//Peak(O_SPY,0.007,1)<Peak(O_SPY,0.007,1) Dn market
		//Trough(O_SPY,0.007,1)>Trough(O_SPY,0.007,2) up market

// if market has no trend then use NL
// State of Market . Above >UL==4,>NL and <UL ==3, >LL and <NL==2, <LL==1
// 4==buy, 3=sell short, 2== buy, 1== sell short

// Change of state and sentiment are important 

UL=H_YDay_SPY; 
LL=L_YDay_SPY;
NL=(UL+LL)/2;

//MARKET STATE == MS. No trade at 0 state
// MS==4 is extremely up and extremely down
MS=IIf(SP_SPY>UL,4,IIf(SP_SPY>NL AND SP_SPY<UL,3,IIf(SP_SPY<NL AND SP_SPY>LL,2,IIf(SP_SPY<LL,1,0))));
printf("op mkt state %g\n",MS);//
MS_pr=IIf(O_SPY>UL,4,IIf(O_SPY>NL AND O_SPY<UL,3,IIf(O_SPY<NL AND O_SPY>LL,2,IIf(O_SPY<LL,1,0))));
printf("pr mkt state %g\n",MS_pr);//
MS_change=MS_pr-MS;
printf("mkt state chg %g\n",MS_change);//
Bars_since_MS_change = 1 + BarsSince(MS_change>0);
//Bars_since_MS_change=IIf(Bars_since_MS_change>60,0,Bars_since_MS_change);
price_diff_since_MS_change=O_SPY-Ref(O_SPY,-Bars_since_MS_change);

// (1) BUY when market ACTV>=3 and sentiment<4 and price_diff_since_sent_p<-0.05
// (2) If ACTV>4 sentiment >5 and Bars_since_high_vel<100 then jump down or up. price_diff_since_high_vol<0 ==sell or price_diff_since_high_vol>0 == buy

// sentiment_ZScore range [5,-5]. Sentiment above or below 5 is reversal 
// Market active ACTV[3,-3]. Buy when ACTV>=3 and Sell short when ACTV<=-3
//Velocity<8. Velocity > 10 is reversal signal

BC1= ACTV>=3 AND sentiment_ZScore<4 AND MS_change==0 AND MS_pr==2 AND Bars_since_sent_p==0 AND Bars_since_high_vel==0 AND (NL-O_SPY)>0.1 AND Cross(O_SPY,DT);// buy when market moving slowly at state 2. 
BC2= ACTV>=3 AND sentiment_ZScore<4 AND MS_change==0 AND MS_pr==3 AND Bars_since_sent_p==0 AND Bars_since_high_vel==0 AND Bars_since_MS_change==0 AND Cross(O_SPY,R2) AND Bars_since_high_vel==0 AND abs(UL-O_SPY)>0.25; // market uptrend and above opening
BC3= ACTV>=3 AND sentiment_ZScore<4 AND MS_change>0 AND MS_pr<4 AND Bars_since_sent_p==0 AND Bars_since_high_vel==0 AND price_diff_since_MS_change>0.05 AND Cross(O_SPY,R2) AND abs(UL-O_SPY)>0.25; // market uptrend and above opening
BC4= ACTV>=3 AND ((Bars_since_sent_n>1 AND price_diff_since_sent_n>0.05) OR (Bars_since_high_vel>1 AND price_diff_since_high_vel>0.1)) AND  MS_change<-1 AND  Cross(O_SPY,R2);
//BC4 reversal
BC= BC1 OR BC2 OR BC3 OR BC4;

SSC1=ACTV<=-3  AND sentiment_ZScore>-4 AND MS_change==0 AND MS_pr==4 AND Bars_since_sent_n==0 AND Bars_since_high_vel==0 AND Cross(UT,O_SPY) AND (O_SPY-UL)>0.1;// market slow state at level 3
SSC2=ACTV<=-3  AND sentiment_ZScore>-4 AND MS_change==0 AND MS_pr==3 AND Bars_since_sent_n==0 AND Bars_since_high_vel==0 AND Cross(UT,O_SPY) AND (O_SPY-NL)>0.25;// market slow state at level 3
SSC3=ACTV<-3 AND sentiment_ZScore>-4 AND MS_change<0 AND MS_pr>1 AND Bars_since_sent_n==0 AND Bars_since_high_vel==0  AND Bars_since_MS_change<-0.05 AND Cross(S2,O_SPY) AND abs(LL-O_SPY)>0.25; // market downtrend and below opening 
SSC4= ACTV<-3 AND  ((Bars_since_sent_p>1 AND price_diff_since_sent_p<-0.05) OR (Bars_since_high_vel>1 AND price_diff_since_high_vel<-0.1)) AND MS_change>1 AND Cross(S2,O_SPY);
SSC= SSC1 OR SSC2 OR SSC3 OR SSC4;

//MarketON and
OSZ=750;//Param("order size",100,50,200);//LastValue(inv_SPY/C_SPY);
			//ACT==signal
			// Buy Classification(BC): (1) ACTV_B==1 (2) O_SPY<DT (3) DT>LL and DT<NL (4) Angle of DT not stiff
			// Short Sell Classification: (1) ACTV_SS==1 (2) O_SPY>UT (3) UT>NL and UT<UL (4) angle of UT not stiff
			// (1)DT<LL and (2) stiff angle leads to SPXS buy(2000). Assumed long position of SPY (OSZ)
			// (2) UT>UL and (2) stiff angle leads to SPXL buy(100). Assumed short position of SPY (-OSZ)
_SECTION_END();  



_SECTION_BEGIN("IBC variables");//HEDGING by SPXL,SPXU,SPXS 20K amount for 500 SPY ( approximation)
ibc = GetTradingInterface("IB");
averageprice=ibc.GetPositionInfo(ABName, "Avg. cost");
IBPosSize = ibc.GetPositionSize(ABName);
printf("average price:"+"\t"+averageprice+"\n");
printf("position list:"+"\t"+IBPosSize+"\n");
_SECTION_END();	
	

_SECTION_BEGIN("SIGNAL");


			//####MOMENTUM ==MM will be implemented after developed sentiment analysis 
//Mean Reversion
BC_buy=BC AND InWatchList(0);
BC_sell=O_SPY>UT AND (spread>30 OR spyROC>30) AND InWatchList(0)  AND O_SPY>O_SPY[lastValue(BarIndex()) - lastvalue(barssince(BC_buy==1))]+0.05 AND IBPosSize>0 AND O_SPY>averageprice+0.05;
SSC_short=SSC AND InWatchList(0);
SSC_cover=O_SPY<DT AND (spread<-30 OR  spyROC<-30) AND  InWatchList(0) AND O_SPY<O_SPY[SelectedValue(BarIndex()) - LastValue(barssince(SSC_short==1))]-0.05 AND IBPosSize<0 AND O_SPY<averageprice-0.05;

// When SPY is above/below the open price ( XXXOP) by 1.5( use data science)  then change os state
// momentum and MR with ROC and spread at range 
//#momentum indicator based
//Signal gap== 2min and buy signal should below previous sell price or SS should be above last cover price
//bi = BarIndex();
//arrayitem = SelectedValue( bi ) - bi[ 0 ]; 
//"Close at selected bar:" + C_SPY[ arrayitem ];

//list three for rated 5 stocks
//list four stocks are technical based for both buy or sell

//Acount cutout not included AND AccountCutout==1
//AND US_Trade_On
Buy=BC_buy;//list 0 with single lev ETF for mean reversion and list 1 with x3 liv ETFs for contra
Short=SSC_short;
/// both sell and cover should with position >0
sell=BC_sell;
cover=SSC_cover;


//Buy=ExRem(Buy,Sell);
//sell=ExRem(Sell,Buy);
//short=ExRem(Short,cover);
//cover=ExRem(cover,Short);

LastBuy = LastValue(Buy);
LastShort = LastValue(Short);
LastSell = LastValue(Sell);
LastCover = LastValue(Cover);

e = Equity(1,0);
start = ParamDate( "Start Date", "2016-04-01" );
end=ParamDate("End Date", "2017-12-31" );
Lprofit = e - ValueWhen( Buy, e); 
Sprofit = e - ValueWhen( Short, e); 

BP= LastBuy;
SHP=LastShort ;
SP= LastSell;//list two for stocks, stop loss only for stocks 
CP= LastCover;
	//size=IIf( (LastBuy OR  LastShort),OSZ,abs(OSZ)); 
_SECTION_END();

_SECTION_BEGIN("PLOT"); 

//Plot(sentiment_ZScore,"sentiment_pol",colorBrown,styleline);
//Plot(velocity,"velocity",colorLightYellow,styleline);
//Plot(ACTV,"ACTV",colorLightOrange,styleDots);
//Plot(spread_vwap,"spread",colorBrown,styleDots);
//Plot(spyROC,"spyROC_ZScore",colorLightOrange,styleDots);

Plot(O_SPY, "Open", IIf( Flip(BC_buy,SSC_short), colorLightBlue,  colorLightGrey), styleline);
Plot(UT,"up trend",colorGrey40,styleDashed);
Plot(DT,"Dn trend",colorGrey40,styleDashed);
Plot(UL,"Jump_UP",colorLightYellow,styleline);
Plot(LL,"Jump_DN",colorLightYellow,styleLine);
PlotShapes(IIf(BC_buy, shapeHollowCircle, shapeNone),colorGreen,1,L, Offset=-2);
PlotShapes(IIf(SSC_short,shapeCircle, shapeNone),colorRed, 1, H, Offset=2);
PlotShapes(IIf(BC_sell, shapeHollowCircle, shapeNone),colorGreen,1,L, Offset=-2);
PlotShapes(IIf(SSC_cover,shapeCircle, shapeNone),colorRed, 1, H, Offset=2);
//Plot(spread,"SPREAD",colorlightBlue,styleLeftAxisScale);
//Plot(spyROC,"avgROC",colorlightBlue,styleLeftAxisScale);

//Plot(e,"Equity",colorlightBlue,styleLeftAxisScale);
PlotShapes(IIf(cover,shapeCircle, shapeNone),colorLightGrey, 0, L, Offset=-2);
PlotShapes(IIf(sell, shapeHollowCircle, shapeNone),colorLightGrey, 0,H, Offset=2);

_SECTION_END();

_SECTION_BEGIN("AMI-IB Trigger");
ibc = GetTradingInterface("IB");
IBcStatus = ibc.IsConnected();
OrderID = StaticVarGetText("OrderID"+ABName);
if (OrderID == "" && (LastBuy || LastShort))
{
    StaticVarSetText("OrderID"+ABName,"DUMMY");
}
OrderStatus = ibc.GetStatus( OrderID , True );
if( OrderStatus != "" ) StaticVarSetText("OrderStatus"+ABName,OrderStatus);
Pending=ibc.IsOrderPending(OrderID);
//SellPending=ibc.IsOrderPending(OrderID);
//printf("OrderID:"+"\t"+OrderID+"\n");
//printf("OrderStatus:"+"\t"+OrderStatus+"\n");
//printf("Pending:"+"\t"+Pending+"\n");
LastOrderID = StaticVarGetText("OrderID"+ABName);
ORderStatus="";
IBcStatusString = WriteIf(IBCStatus==0,"TWS Not Found",WriteIf(IBCStatus==1,"Connecting to TWS",WriteIf(IBCStatus==2,"TWS OK",WriteIf(IBCStatus==3,"TWS OK (msgs)",""))));
if ( IBcStatus==2 )
{
	ibc = GetTradingInterface("IB");
	averageprice=ibc.GetPositionInfo(ABName, "Avg. cost");
	IBPosSize = ibc.GetPositionSize(ABName);
	Min_RTS=LastValue(GetRTDataForeign("Bid",ABName))-averageprice; 
	Min_RTC=averageprice-LastValue(GetRTDataForeign("Ask",ABName));
	minSProfit=Min_RTS>0.05;
	minCProfit=Min_RTC>0.05;
	positionclear=  TimeNum()>=154500;
	BP= IBPosSize==0 AND US_Trade_On AND LastBuy;
	SHP= IBPosSize==0 AND US_Trade_On AND LastShort;
	reversebuy= sentiment>30 AND velocity>30 AND IBPosSize==-OSZ AND Min_RTS>0.15 AND US_Trade_On;
	CP=(IBPosSize<=-OSZ AND Min_RTC>0.05 AND LastCover AND US_Trade_On);
	reversesell= sentiment<-30 AND velocity<-30 AND IBPosSize==OSZ AND Min_RTC>0.15 AND US_Trade_On;
	//further buy sell was at earlier version
	SP=(IBPosSize>=OSZ AND Min_RTS>0.05 AND LastSell AND US_Trade_On) ;
	buyorcov=BP OR CP OR reversebuy OR  positionclear==1;
	sellorshort=SHP OR SP OR reversesell OR positionclear==1 ;

	if(LastValue(buyorcov))  //BUY

    {
		if(LastValue(reversebuy)==1)
		{
			OID= ibc.PlaceOrder( ABName, "BUY",2*OSZ, "MKT",0, 0, "IOC", True); //size for general case
		}
		else
			OID= ibc.PlaceOrder( ABName, "BUY",OSZ, "MKT",0, 0, "IOC", True); //size for general case
        OrderStatus = ibc.GetStatus( OID, True);
        if(OrderStatus == "Filled"){
        StaticVarSetText("OrderID"+ABName,OID);
        }

		for (dummy=0; dummy<40; dummy++) ibc.Sleep(50);  //Usually takes up to about a second for TWS to get acknowledgement from IB
        tradetime=GetPerformanceCounter()/1000; 
            while ((GetPerformanceCounter()/1000 - tradetime) <25) // give up after 25 seconds
             {
                 ibc.Reconnect();  //Refreshes ibc, and gets accurate status
                 //ORderStatus = ibc.GetStatus( OID, True);
                 if (OrderStatus == "PreSubmitted" || OrderStatus == "Submitted" || OrderStatus == "Filled")
                     break;
             }
                   

    }


    if(LastValue(sellorshort))  //SHORT SELL
    {
		if(LastValue(reversesell)==1)
		    OID= ibc.PlaceOrder(ABName, "SELL",2*OSZ, "MKT",0, 0, "IOC", True); ////size for general case
		else
		    OID= ibc.PlaceOrder(ABName, "SELL",OSZ, "MKT",0, 0, "IOC", True); ////size for general case   
        OrderStatus = ibc.GetStatus( OID, True);
        if(OrderStatus == "Filled"){
			StaticVarSetText("OrderID"+ABName,OID);
        }
               
		for (dummy=0; dummy<40; dummy++) ibc.Sleep(50);  //Usually takes up to about a second for TWS to get acknowledgement from IB
		tradetime=GetPerformanceCounter()/1000; 
			while ((GetPerformanceCounter()/1000 - tradetime) <25) // give up after 5 seconds
			{
                 ibc.Reconnect();  //Refreshes ibc, and gets accurate status
                 //ORderStatus = ibc.GetStatus( OID, True);
                 if (OrderStatus == "PreSubmitted" || OrderStatus == "Submitted" || OrderStatus == "Filled")
                     break;
            }
        
                   

    }
ibc.ClearList(4);//error list clearing
  //Exploration
//IBcStatusString = WriteIf(IBCStatus==0,"TWS Not Found",WriteIf(IBCStatus==1,"Connecting to TWS",WriteIf(IBCStatus==2,"TWS OK",WriteIf(IBCStatus==3,"TWS OK (msgs)",""))));
//LastOrderID = StaticVarGetText("OrderID"+ABName);
//OrderStatus = ibc.GetStatus( LastOrderID , True );

if( OrderStatus != "" ) StaticVarSetText("OrderStatus"+ABName,ORderStatus);


}

Filter=(Buy OR Short OR Sell OR Cover) AND LastOrderID!="DUMMY";// AND  Status("lastbarinrange");
AddTextColumn(FullName(),"name",200);
AddColumn(Buy,"Buy",1.0);
AddColumn(Short,"Short",1.0);
AddColumn(Sell,"Sell",1.0);
AddColumn(Cover,"Cover",1.0);
AddColumn(IIf(SubmitOrders,Asc("Y"),Asc("N")),"Transmit",formatChar);
AddColumn(IIf(Buy OR Cover,Asc("L"),IIf(Short OR Sell,Asc("S"),Asc(" "))),"Buy/Sell",formatChar);
AddColumn(IIf(Buy,BuyPrice,ShortPrice),"Entry",1.2);
AddTextColumn(IBcStatusString,"IBC Status",100);

_SECTION_END();


_SECTION_BEGIN("Alert"); 

//AlertIf( Buy, "EMAIL", "Buy Alert in "+FullName()+ "@"+BuyPrice,1 );

//AlertIf( Sell, "EMAIL", "Sell Alert in "+FullName()+ "@"+SellPrice,1 );

//AlertIf( Short, "EMAIL", "Short Alert in "+FullName()+ "@"+ShortPrice,3 );

//AlertIf( Cover, "EMAIL", "Short Alert in "+FullName()+ "@"+CoverPrice,3 );

_SECTION_END();