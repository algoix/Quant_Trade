OptimizerSetEngine("cmae"); // we can use "spso" or "trib" here

_SECTION_BEGIN("Trading Set up");
//Filename = _DEFAULT_NAME();
SubmitOrders = True; 
Tracing = False;    
MarketON=093000;
US_Trade_On=TimeNum() >= 094000 AND TimeNum() <=154500;
printf("US_Trade_On:"+"\t"+US_Trade_On+"\n");
ABName="SPY";//IBName =Name();//getfndata("Alias");
Bars_so_far_today = 1 + BarsSince( Day() != Ref(Day(), -1));
printf("Bars already for today:"+"\t"+Bars_so_far_today+"\n");
_SECTION_END();

_SECTION_BEGIN("SPY-Variables");
SetForeign(ABName);
O_SPY = O;
H_SPY = H;
L_SPY = L;
C_SPY = C;
v_SPY = IIf(V==0,1,Volume);
RestorePriceArrays();

// Useful to find state of market
C_YDay_SPY = TimeFrameGetPrice("C_SPY", inDaily, -1); // yesterdays close https://www.amibroker.com/guide/h_timeframe.html
H_YDay_SPY = TimeFrameGetPrice("H_SPY", inDaily, -1);
L_YDay_SPY = TimeFrameGetPrice("L_SPY", inDaily, -1);
C_5Min_SPY=TimeFrameGetPrice("C_SPY", in5minute, -1);// TimeFrameExpand( ma5_13, in5Minute)
L_5Min_SPY=TimeFrameGetPrice("L_SPY",in5minute, -1);// TimeFrameExpand( ma5_13, in5Minute)
H_5min_SPY=TimeFrameGetPrice("H_SPY",in5minute,-1);
O_5min_SPY=TimeFrameGetPrice("O_SPY",in5minute,-1);

//######Sentiment,MS,MS_change,ND and ACTV
	//Normalization
SP_SPY=ValueWhen(Bars_so_far_today==600,O);
printf("Start price %g\n",SP_SPY);
UL=H_YDay_SPY; 
LL=L_YDay_SPY;
NL=(UL+LL)/2;
//Useful to find active market
price=(Ref(H_SPY,-1)+Ref(L_SPY,-1)+Ref(C_SPY,-1))/3;
//B is similar to price
B=(HHV(H_SPY,60) + HHV(H_SPY-L_SPY,60)+LLV(L_SPY,60) + LLV(H_SPY-L_SPY,60))/2;
R1=price*2-Ref(L_SPY,-1);
R2=price+(Ref(H_SPY,-1)-Ref(L_SPY,-1));
S1=price*2-Ref(H_SPY,-1);
S2=price-(Ref(H_SPY,-1)-Ref(L_SPY,-1));
ND=O_SPY/SP_SPY;
printf("Market UP/DOWN %g\n",ND);
//ACTIVE market. see previous version SPY_1403
ACTV=v_SPY>50 AND v_SPY>MA(v_SPY,60)*0.75;

//MARKET STATE == MS. No trade at 0 state . MS==4 is extremely up and 1 is extremely down
MS=IIf(SP_SPY>UL,4,IIf(SP_SPY>NL AND SP_SPY<UL,3,IIf(SP_SPY<NL AND SP_SPY>LL,2,IIf(SP_SPY<LL,1,0))));
printf("op mkt state %g\n",MS);//
MS_pr=IIf(O_SPY>=UL,4,IIf(O_SPY>=NL AND O_SPY<UL,3,IIf(O_SPY<NL AND O_SPY>=LL,2,IIf(O_SPY<LL,1,0))));
printf("pr mkt state %g\n",MS_pr);//
MS_change=MS_pr-MS;
printf("mkt state chg %g\n",MS_change);//

Bars_since_MS_change = 1 + BarsSince(MS_change!=0);
Bars_since_MS_change=IIf(Bars_since_MS_change>60,0,Bars_since_MS_change);
price_diff_since_MS_change=O_SPY-Ref(O_SPY,-Bars_since_MS_change);
price_diff_since_MS_change=IIf(Bars_since_MS_change>0,sum(O_SPY-Ref(O_SPY,-MS_change),12),0);

// SENTIMENT 
opening_jump=SP_SPY-C_YDay_SPY;
present_jump=opening_jump+O_SPY-SP_SPY;
sentiment=present_jump/opening_jump;
// VELOCITY
// velocity per 5m above 0.25 is high speed.  
velocity_5m=(O_SPY-Ref(O_SPY,-60))/0.25;
velocity=Sum(IIf(velocity_5m>1,1,IIf(velocity_5m<-1,-1,0)),60);
printf("velocity %g\n",velocity);

//MS_index=IIf(MS_pr==4,(O_SPY-UL)*(O_SPY-SP_SPY)/opening_jump,IIf(MS_pr==3,(O_SPY-NL)*(O_SPY-SP_SPY)/opening_jump,IIf(MS==2,(O_SPY-LL)*(O_SPY-SP_SPY)/opening_jump,(LL-O_SPY)*(O_SPY-SP_SPY)/opening_jump)));
MS_index=IIf(MS_pr==4,(O_SPY-UL)*(sentiment+velocity+MS_change)+4/(UL-SP_SPY-opening_jump),IIf(MS_pr==3,(O_SPY-NL)*(sentiment+velocity+MS_change)+3/(NL-SP_SPY-opening_jump),IIf(MS==2,(O_SPY-LL)*(sentiment+velocity+MS_change)+2/(LL-SP_SPY-opening_jump),(O_SPY-LL)*(sentiment+velocity+MS_change)+1/(LL-SP_SPY-opening_jump))));
MS_index_z=(MS_index - MA(MS_index,60 ) ) / StDev(MS_index,60);


printf("mkt Index %g\n",MS_index);//

MS_index_up=MS_index_z>3;
MS_index_down=MS_index_z<-3;
MS_index_normal=MS_index<-5*MA(MS_index,60) AND MS_index>5*MA(MS_index,60);

printf("mkt Index_up %g\n",MS_index_up);//
printf("mkt Index_down %g\n",MS_index_down);//
printf("mkt Index_normal %g\n",MS_index_normal);//



//### mean reversion indicators for MR
// Distance
D=O_SPY-SP_SPY;
D=(D- MA(D,60 ) ) / StDev(D,60);
//prediction of Y by ML. Y will be >1, <-1 or 0
Y=sum(O_SPY-Ref(O_SPY,-1),60)/0.25;
Y=(Y - MA(Y,60 ) ) / StDev(Y,60);
//VWAP spread
totalVolume = Sum(Ref(v_SPY,-1),12);
VWAP = Sum (price *Ref(v_SPY,-1),12) /totalVolume;
//# price and VWAP difference
spread=O_SPY-VWAP;
spread=(spread - MA(spread,60 ) ) / StDev(spread,60);
// Regression spread
OLS_spread=Sum(O_SPY-(LinRegIntercept(O_SPY,60)+LinRegSlope(O_SPY, 60 )*O_SPY),60);
OLS_spread=(OLS_spread - MA(OLS_spread,60 ) ) / StDev(OLS_spread,60);

mr_top=D>2 OR Y>2 OR spread>2 OR OLS_spread>2;
mr_bot=D<-2 OR Y<-2 OR spread<-2 OR OLS_spread<-2;
printf("MR top %g\n",mr_top);
printf("MR bot %g\n",mr_bot);

_SECTION_END();



_SECTION_BEGIN("OPTIMIZATION"); //##//SPY//
//inv_SPY=Optimize("investment",45000,30000,60000,1000 );
_SECTION_END();

_SECTION_BEGIN("SPY STRATEGY");//HEDGING by SPXL,SPXU,SPXS 2000K amount for 23 SPY ( approximation)

//#retracement 24%,38%,50%,62% and 124%. Not considered 



red=ACTV==1 AND VWAP>B AND mr_top;// market will be up for momentum or will be down from MR
green=ACTV==1 AND VWAP<B AND mr_bot;

// reversion from top and bottom. Long time to form
rev_top=(sentiment>5 OR velocity>10) AND ACTV==1 AND VWAP>B;
rev_bot=(sentiment<-5 OR velocity<-10) AND ACTV==1 AND VWAP<B ;
rev=IIf(rev_top==1,1,IIf(rev_bot==1,-1,0));
printf("reversion%g\n",rev);//

Bars_since_rev_top = 1 + BarsSince(rev==1);
Bars_since_rev_top =IIf(Bars_since_rev_top>30,0,Bars_since_rev_top);
Bars_since_rev_bot = 1 + BarsSince(rev_bot==1);
Bars_since_rev_bot =IIf(Bars_since_rev_bot>30,0,Bars_since_rev_bot);

//printf("rev_p %g\n",rev_p);
//printf("rev_n %g\n",rev_n);
price_diff_since_rev_top=O_SPY-Ref(O_SPY,-Bars_since_rev_top);
price_diff_since_rev_bot=O_SPY-Ref(O_SPY,-Bars_since_rev_bot);
printf("price_diff_since_rev_p %g\n",price_diff_since_rev_top);
printf("price_diff_since_rev_n %g\n",price_diff_since_rev_bot);

//Normalized data==ND. ND >1 == buy if ND<1 sell short

//Mean Reversion
BC_MR=green AND Cross(O_SPY,R1) AND sentiment<4 AND velocity<5;
SSC_MR=red AND Cross(S1,O_SPY) AND sentiment>-4 AND velocity>-5;

// Zone 1
	//MR
BC_MR_1= MS_pr==1 AND MS_change==0 AND BC_MR;
SSC_MR_1=MS_pr==1 AND MS_change==0 AND SSC_MR;
	// Reversion
BC_R_1= MS_pr==1 AND price_diff_since_rev_bot>0.08;
	// Momentum zone
SSC_MM_zone_1= MS_pr==1 AND price_diff_since_rev_top<-0.08;

// Zone 2
	//MR
BC_MR_2= MS_pr==2  AND MS_change>=0 AND BC_MR;
SSC_MR_2= MS_pr==2  AND MS_change>=0 AND SSC_MR;
	// Reversion
SSC_R_2= MS_pr==2  AND price_diff_since_rev_top<-0.08;
BC_R_2= MS_pr==2 AND price_diff_since_rev_bot>0.08;
	// Momentum zone
BC_MM_zone_2=MS_pr==2 AND price_diff_since_rev_bot>0.08;
SSC_MM_zone_2= MS_pr==2  AND price_diff_since_rev_top<-0.08;

// Zone 3
	//MR
BC_MR_3= MS_pr==3 AND MS_change>=0 AND BC_MR;
SSC_MR_3=MS_pr==3 AND MS_change>=0 AND SSC_MR;
	// Reversion
SSC_R_3= MS_pr==3 AND price_diff_since_rev_top<-0.08;
BC_R_3= MS_pr==3 AND MS_pr==2 AND price_diff_since_rev_bot>0.08;
	// Momentum zone
BC_MM_zone_3=MS_pr==3  AND price_diff_since_rev_bot>0.08;
SSC_MM_zone_3=MS_pr==3 AND price_diff_since_rev_top<-0.08;

// Zone 4
	//MR
BC_MR_4= MS_pr==4 AND MS_change>=0 AND BC_MR;
SSC_MR_4=MS_pr==4 AND MS_change>=0 AND SSC_MR;
	// Reversion
SSC_R_4 = MS_pr==4 AND price_diff_since_rev_top<-0.08;
	// Momentum zone
BC_MM_zone_4=MS_pr==4 AND  price_diff_since_rev_bot>0.08;


BC=BC_MR_1 OR BC_R_1 OR BC_MR_2 OR BC_R_2 OR BC_MM_zone_2 OR BC_MR_3 OR BC_R_3 OR BC_MM_zone_3 OR BC_MR_4 OR BC_MM_zone_4;
SSC=SSC_MR_1 OR SSC_MM_zone_1 OR SSC_MR_2 OR SSC_R_2 OR SSC_MM_zone_2 OR SSC_MR_3 OR SSC_R_3 OR SSC_MM_zone_3 OR SSC_MR_4 OR SSC_R_4; 

BC=BC AND Cross(O_SPY,MA(O_SPY,5)) AND ACTV==1;
SSC= SSC AND Cross(MA(O_SPY,5),O_SPY) AND ACTV==1;
Bars_since_BC = 1 + BarsSince(BC==1);
Bars_since_BC=IIf(Bars_since_BC>12,0,Bars_since_BC);
price_diff_since_BC=IIf(Bars_since_BC>0,sum(O_SPY-Ref(O_SPY,-Bars_since_BC),12),0);
printf("price_diff_since_BC %g\n",price_diff_since_BC);
Bars_since_SSC = 1 + BarsSince(SSC==1);
Bars_since_SSC=IIf(Bars_since_SSC>12,0,Bars_since_SSC);
price_diff_since_SSC=IIf(Bars_since_SSC>0,sum(O_SPY-Ref(O_SPY,-Bars_since_SSC),12),0);
printf("price_diff_since_SSC %g\n",price_diff_since_SSC);

SC= VWAP>B AND mr_top AND Cross(O_SPY,H_SPY) AND price_diff_since_BC>0.08;
CC=VWAP<B AND mr_bot AND Cross(L_SPY,O_SPY) AND price_diff_since_SSC<-0.08;

OSZ=750;//Param("order size",100,50,200);//LastValue(inv_SPY/C_SPY);
			//ACT==signal
			// Buy Classification(BC): (1) ACTV_B==1 (2) O_SPY<DT (3) DT>LL and DT<NL (4) Angle of DT not stiff
			// Short Sell Classification: (1) ACTV_SS==1 (2) O_SPY>UT (3) UT>NL and UT<UL (4) angle of UT not stiff
			// (1)DT<LL and (2) stiff angle leads to SPXS buy(2000). Assumed long position of SPY (OSZ)
			// (2) UT>UL and (2) stiff angle leads to SPXL buy(100). Assumed short position of SPY (-OSZ)
_SECTION_END();  


_SECTION_BEGIN("PLOT"); 
Plot(O_SPY, "Open", IIf( green, colorLime,IIf(red,colorOrange,colorBlueGrey)), styleline);
Plot(MS_index, "Open", IIf(MS_index_down, colorLime,IIf(MS_index_up,colorOrange,colorwhite)),styleLeftAxisScale);

//Plot(MS_index,"MS_index",colorWhite,styleLeftAxisScale);
//Plot(S1,"support",colorRed,styleline);
//Plot(UL,"Upper",colorLightYellow,styleline);
//Plot(LL,"Lower",colorLightYellow,styleLine);
//Plot(NL,"Middle",colorLightGrey,styleDashed);

_SECTION_END();

_SECTION_BEGIN("IBC variables");//HEDGING by SPXL,SPXU,SPXS 20K amount for 500 SPY ( approximation)
ibc = GetTradingInterface("IB");
averageprice=ibc.GetPositionInfo(ABName, "Avg. cost");
IBPosSize = ibc.GetPositionSize(ABName);
printf("average price:"+"\t"+averageprice+"\n");
printf("position list:"+"\t"+IBPosSize+"\n");
_SECTION_END();	
	

_SECTION_BEGIN("SIGNAL");


			//####MOMENTUM ==MM will be implemented after developed sentiment analysis 
//Mean Reversion
_buy=Bars_since_SSC==0 AND Bars_since_BC!=0 AND price_diff_since_BC>0.02 AND InWatchList(0);
_sell= SC AND InWatchList(0) AND IBPosSize>0 AND O_SPY>averageprice+0.05;
_short=Bars_since_BC==0 AND Bars_since_SSC!=0 AND price_diff_since_SSC<-0.02 AND InWatchList(0);
_cover=CC AND  InWatchList(0) AND IBPosSize<0 AND O_SPY<averageprice-0.05;

// When SPY is above/below the open price ( XXXOP) by 1.5( use data science)  then change os state
// momentum and MR with ROC and spread at range 
//#momentum indicator based
//Signal gap== 2min and buy signal should below previous sell price or SS should be above last cover price
//bi = BarIndex();
//arrayitem = SelectedValue( bi ) - bi[ 0 ]; 
//"Close at selected bar:" + C_SPY[ arrayitem ];

//list three for rated 5 stocks
//list four stocks are technical based for both buy or sell

//Acount cutout not included AND AccountCutout==1
//AND US_Trade_On
Buy=_buy;//list 0 with single lev ETF for mean reversion and list 1 with x3 liv ETFs for contra
Short=_short;
/// both sell and cover should with position >0
sell=_sell;
cover=_cover;


//Buy=ExRem(Buy,Sell);
//sell=ExRem(Sell,Buy);
//short=ExRem(Short,cover);
//cover=ExRem(cover,Short);

LastBuy = LastValue(Buy);
LastShort = LastValue(Short);
LastSell = LastValue(Sell);
LastCover = LastValue(Cover);

e = Equity(1,0);
start = ParamDate( "Start Date", "2016-04-01" );
end=ParamDate("End Date", "2017-12-31" );
Lprofit = e - ValueWhen( Buy, e); 
Sprofit = e - ValueWhen( Short, e); 

BP= LastBuy;
SHP=LastShort ;
SP= LastSell;//list two for stocks, stop loss only for stocks 
CP= LastCover;
	//size=IIf( (LastBuy OR  LastShort),OSZ,abs(OSZ)); 
_SECTION_END();

PlotShapes(IIf(_buy, shapeHollowCircle, shapeNone),colorGreen,1,L, Offset=-2);
PlotShapes(IIf(_short,shapeHollowCircle, shapeNone),colorRed, 1, H, Offset=2);
PlotShapes(IIf(SC,shapeCircle, shapeNone),colorLightGrey, 0, L, Offset=-2);
PlotShapes(IIf(CC, shapeCircle, shapeNone),colorOrange, 0,H, Offset=2);
//Plot(e,"Equity",colorlightBlue,styleLeftAxisScale);


_SECTION_BEGIN("AMI-IB Trigger");
ibc = GetTradingInterface("IB");
IBcStatus = ibc.IsConnected();
OrderID = StaticVarGetText("OrderID"+ABName);
if (OrderID == "" && (LastBuy || LastShort))
{
    StaticVarSetText("OrderID"+ABName,"DUMMY");
}
OrderStatus = ibc.GetStatus( OrderID , True );
if( OrderStatus != "" ) StaticVarSetText("OrderStatus"+ABName,OrderStatus);
Pending=ibc.IsOrderPending(OrderID);
//SellPending=ibc.IsOrderPending(OrderID);
//printf("OrderID:"+"\t"+OrderID+"\n");
//printf("OrderStatus:"+"\t"+OrderStatus+"\n");
//printf("Pending:"+"\t"+Pending+"\n");
LastOrderID = StaticVarGetText("OrderID"+ABName);
ORderStatus="";
IBcStatusString = WriteIf(IBCStatus==0,"TWS Not Found",WriteIf(IBCStatus==1,"Connecting to TWS",WriteIf(IBCStatus==2,"TWS OK",WriteIf(IBCStatus==3,"TWS OK (msgs)",""))));
if ( IBcStatus==2 )
{
	ibc = GetTradingInterface("IB");
	averageprice=ibc.GetPositionInfo(ABName, "Avg. cost");
	IBPosSize = ibc.GetPositionSize(ABName);
	Min_RTS=LastValue(GetRTDataForeign("Bid",ABName))-averageprice; 
	Min_RTC=averageprice-LastValue(GetRTDataForeign("Ask",ABName));
	minSProfit=Min_RTS>0.05;
	minCProfit=Min_RTC>0.05;
	BP= IBPosSize==0 AND US_Trade_On AND LastBuy;
	SHP= IBPosSize==0 AND US_Trade_On AND LastShort;
	stoploss_n_hold= (price_diff_since_rev_bot>0.08 OR (price_diff_since_MS_change>0.05 AND MS_change>0)) AND IBPosSize==-OSZ AND Min_RTS>0.1  AND US_Trade_On;
	CP=(IBPosSize<=-OSZ AND Min_RTC>0.05 AND LastCover AND US_Trade_On);
	stoploss_p_hold= (price_diff_since_rev_top<-0.08 OR (price_diff_since_MS_change<-0.05 AND MS_change<0)) AND IBPosSize==OSZ AND Min_RTC>0.1  AND US_Trade_On;
	//further buy sell was at earlier version
	SP=(IBPosSize>=OSZ AND Min_RTS>0.05 AND LastSell AND US_Trade_On);
	buyorcov=BP OR CP OR stoploss_n_hold;
	sellorshort=SHP OR SP OR stoploss_p_hold;

	if(LastValue(buyorcov))  //BUY

    {
		if(LastValue(stoploss_n_hold)==1)
		{
			OID= ibc.PlaceOrder( ABName, "BUY",2*OSZ, "MKT",0, 0, "IOC", True); //size for general case
		}
		else
			OID= ibc.PlaceOrder( ABName, "BUY",OSZ, "MKT",0, 0, "IOC", True); //size for general case
        OrderStatus = ibc.GetStatus( OID, True);
        if(OrderStatus == "Filled"){
        StaticVarSetText("OrderID"+ABName,OID);
        }

		for (dummy=0; dummy<40; dummy++) ibc.Sleep(50);  //Usually takes up to about a second for TWS to get acknowledgement from IB
        tradetime=GetPerformanceCounter()/1000; 
            while ((GetPerformanceCounter()/1000 - tradetime) <25) // give up after 25 seconds
             {
                 ibc.Reconnect();  //Refreshes ibc, and gets accurate status
                 //ORderStatus = ibc.GetStatus( OID, True);
                 if (OrderStatus == "PreSubmitted" || OrderStatus == "Submitted" || OrderStatus == "Filled")
                     break;
             }
                   

    }


    if(LastValue(sellorshort))  //SHORT SELL
    {
		if(LastValue(stoploss_p_hold)==1)
		    OID= ibc.PlaceOrder(ABName, "SELL",2*OSZ, "MKT",0, 0, "IOC", True); ////size for general case
		else
		    OID= ibc.PlaceOrder(ABName, "SELL",OSZ, "MKT",0, 0, "IOC", True); ////size for general case   
        OrderStatus = ibc.GetStatus( OID, True);
        if(OrderStatus == "Filled"){
			StaticVarSetText("OrderID"+ABName,OID);
        }
               
		for (dummy=0; dummy<40; dummy++) ibc.Sleep(50);  //Usually takes up to about a second for TWS to get acknowledgement from IB
		tradetime=GetPerformanceCounter()/1000; 
			while ((GetPerformanceCounter()/1000 - tradetime) <25) // give up after 5 seconds
			{
                 ibc.Reconnect();  //Refreshes ibc, and gets accurate status
                 //ORderStatus = ibc.GetStatus( OID, True);
                 if (OrderStatus == "PreSubmitted" || OrderStatus == "Submitted" || OrderStatus == "Filled")
                     break;
            }
        
                   

    }
ibc.ClearList(4);//error list clearing
  //Exploration
//IBcStatusString = WriteIf(IBCStatus==0,"TWS Not Found",WriteIf(IBCStatus==1,"Connecting to TWS",WriteIf(IBCStatus==2,"TWS OK",WriteIf(IBCStatus==3,"TWS OK (msgs)",""))));
//LastOrderID = StaticVarGetText("OrderID"+ABName);
//OrderStatus = ibc.GetStatus( LastOrderID , True );

if( OrderStatus != "" ) StaticVarSetText("OrderStatus"+ABName,ORderStatus);


}

Filter=(Buy OR Short OR Sell OR Cover) AND LastOrderID!="DUMMY";// AND  Status("lastbarinrange");
AddTextColumn(FullName(),"name",200);
AddColumn(Buy,"Buy",1.0);
AddColumn(Short,"Short",1.0);
AddColumn(Sell,"Sell",1.0);
AddColumn(Cover,"Cover",1.0);
AddColumn(IIf(SubmitOrders,Asc("Y"),Asc("N")),"Transmit",formatChar);
AddColumn(IIf(Buy OR Cover,Asc("L"),IIf(Short OR Sell,Asc("S"),Asc(" "))),"Buy/Sell",formatChar);
AddColumn(IIf(Buy,BuyPrice,ShortPrice),"Entry",1.2);
AddTextColumn(IBcStatusString,"IBC Status",100);

_SECTION_END();


_SECTION_BEGIN("Alert"); 

//AlertIf( Buy, "EMAIL", "Buy Alert in "+FullName()+ "@"+BuyPrice,1 );

//AlertIf( Sell, "EMAIL", "Sell Alert in "+FullName()+ "@"+SellPrice,1 );

//AlertIf( Short, "EMAIL", "Short Alert in "+FullName()+ "@"+ShortPrice,3 );

//AlertIf( Cover, "EMAIL", "Short Alert in "+FullName()+ "@"+CoverPrice,3 );

_SECTION_END();
