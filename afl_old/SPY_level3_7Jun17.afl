//https://github.com/parthasen/ALGO/blob/mkt_st/signal
//https://github.com/parthasen/ALGO/blob/mkt_st/SPY_level3_30May17

#include "C:\Users\Michal\Dropbox\incl_trade_setup.afl"

_SECTION_BEGIN("market state"); 
price=(Ref(H_SPY,-1)+Ref(L_SPY,-1)+Ref(C_SPY,-1))/3;
ACTV=v_SPY>50 AND v_SPY>MA(v_SPY,L_long)*0.75;
B=(HHV(H_5min_SPY,12) + HHV(H_1Min_SPY-L_1Min_SPY,L_long)+LLV(L_5Min_SPY,12) + LLV(H_1Min_SPY-L_1Min_SPY,L_long))/2;
//MARKET STATE == MS. No trade at 0 state . MS==4 is extremely up and 1 is extremely down
MS_pr=IIf(O_SPY>=UL,4,IIf(O_SPY>=NL AND O_SPY<UL,3,IIf(O_SPY<NL AND O_SPY>=LL,2,IIf(O_SPY<LL,1,0))));
MS=ValueWhen(MS_pr!=Ref(MS_pr,-1),C_SPY);


//VWAP spread
totalVolume = Sum(Ref(v_SPY,-1),60);
VWAP = Sum (price *Ref(v_SPY,-1),60) /totalVolume;
spread=price-VWAP;
OLS_spread=LinRegIntercept(spread,60)+LinRegSlope(spread, 60 )*spread;
//exp_spread=IIf(O_SPY>MS+0.05,B-abs(OLS_spread),IIf(O_SPY<MS-0.05,B+abs(OLS_spread),B));  
exp_spread=C_5Min_SPY+OLS_spread;
exp_spread_z=(exp_spread-MA(O_SPY,60))/StDev(O_SPY,60);

//exp_spread_z<-2 AND

// Market down if <MS or up >MS
	// Market downward if <C_30Min_SPY and <B
	// Market upward if >C_30Min_SPY and >B
	// updaward can be at down or up

VSD=ValueWhen(Cross(B,O_SPY),O_SPY);
VSU=ValueWhen(Cross(O_SPY,B),O_SPY);
if(LastValue(O_SPY)<LastValue(VSD) AND LastValue(O_SPY)<LastValue(L_5Min_SPY) AND LastValue(L_5Min_SPY)<LastValue(C_30Min_SPY) )
VSDU=VSD;
if(LastValue(O_SPY)>LastValue(VSU) AND LastValue(O_SPY)>LastValue(H_5min_SPY ) AND LastValue(H_5Min_SPY)>LastValue(C_30Min_SPY) )
VSDU=VSU;
else VSDU=B;

// VXX and OPT sentiment
sentiment_vxx_vol=C_VXX*sqrt(60)/StDev(O_SPY,60);

sentiment_vxx=C_VXX;
sentiment_vxx_ma=EMA(C_30Min_VXX,5);

sentimetn_pc=C_OP_put/C_OP_call;
sentimetn_pc30=C_30Min_put/C_30Min_call;
sentimetn_pc30_ma=EMA(C_30Min_put/C_30Min_call,60);

Cross_DE=(exp_spread<VSDU OR exp_spread<MS) AND Cross(-2,exp_spread_z);
Cross_IN=(exp_spread>VSDU OR exp_spread>MS) AND Cross(exp_spread_z,2);

//based on price above or below B
velocity_logic=IIf(Cross_IN ,-1,IIf(Cross_DE,1,0));

// based on velocity_logic
price_IN=ValueWhen(velocity_logic==-1,O_SPY);
price_DE=ValueWhen(velocity_logic==1,O_SPY);

price_ID=IIf(O_SPY>price_IN,price_ID_=price_IN,IIf(O_SPY<price_DE,price_ID_=price_DE,VSDU));




// VELOCITY
// velocity per 5m above 0.25 is high speed.  
velocity_=Ref(C_SPY,-1)-NL;
	//1. velocity_5m_ma>velocity_1m_ma and >B buy signal and < is sell signal
    //2. velocity change at peak makes a reversion. 
velocity=Sum(IIf(O_SPY<price_ID AND velocity_/0.03<-1,-1,IIf(O_SPY>price_ID AND velocity_/0.03>1,1,0)),60);

//velocity +60 sell and -60 buy
cross1=velocity==-60;// AND (sentimetn_pc>sentimetn_pc30+0.02 AND sentiment_vxx>sentiment_vxx_ma+0.03);//buy
cross2=velocity==60;// AND (sentimetn_pc<sentimetn_pc30-0.02 AND sentiment_vxx<sentiment_vxx_ma-0.03);//sell


sell_line=ValueWhen(cross2==1,O_SPY);
buy_line=ValueWhen(cross1==1,O_SPY);

BS_point_=Cross(O_SPY,buy_line) OR Cross(sell_line,O_SPY);

// Fixed price  more: MS and NL
BS_point=ValueWhen(BS_point_,O_SPY);
VXX_point=ValueWhen(BS_point_,C_VXX);
pc_point=ValueWhen(BS_point_,sentimetn_pc);

// PID 
P_BS_=(O_SPY-BS_point);
P_VXX=(C_VXX-VXX_point);
P_pc=(sentimetn_pc-pc_point);

P_MS=(O_SPY-MS+P_BS_);
P_NL=(O_SPY-NL+P_BS_);
P_MS_NL=P_MS+(P_MS-P_NL);
P_BS=P_BS_+(P_BS_-P_MS_NL);

big_P=P_BS-P_VXX*5-P_pc*5+spread;
big_P_SPY=BS_point+P_BS-P_VXX*5-P_pc*5+spread;// BS_point or O_SPY

D_BS=P_BS-Ref(P_BS,-1);
D_VXX=P_VXX-Ref(P_VXX,-1);
D_pc=P_pc-Ref(P_pc,-1);

D_spread=spread-Ref(spread,-1);

// PID_point, VXX_point and pc_point, MS,NL and velocity are important


big_D=big_P-Ref(big_P,-12);
big_I=Ref(big_P,-1);
big_I +=big_I;
//big_steer=-2*big_P-3*big_D-0.5*big_I;

//mysignal= -big_steer;

//mysignal_p=0;
//mysignal_n=0;
mysignal_p=big_I;
mysignal_n=big_I;

if(LastValue(P_BS)>0.02 AND LastValue(D_BS)>0 AND LastValue(D_VXX)<=0 AND LastValue(D_pc)<=0 AND LastValue(D_spread)>0)
{
mysignal_p=mysignal_p+0.5*Ref(big_P,-1)+3*big_D;
mysignal_n=mysignal_n+0.5*Ref(big_P,-1)-6*big_D;}
if(LastValue(P_BS)<-0.02 AND LastValue(D_BS)<0 AND LastValue(D_VXX)>=0 AND LastValue(D_pc)>=0 AND LastValue(D_spread)<0)
{
mysignal_p=mysignal_p+0.5*Ref(big_P,-1)-6*big_D;
mysignal_n=mysignal_n+0.5*Ref(big_P,-1)+3*big_D;}
mysignal=big_P_SPY+mysignal_p-mysignal_n;

myspread=O_SPY-mysignal;

mysignal_bbb=BBandBot(mysignal,12,2);
mysignal_bbt=BBandTop(mysignal,12,2);

myspread_bbb=BBandBot(myspread,12,2);
myspread_bbt=BBandTop(myspread,12,2);


MS_U=C_5Min_SPY>SP_SPY AND C_5Min_SPY>MS AND O_SPY>C_5Min_SPY AND C_5Min_SPY>NL AND  C_5Min_SPY>C_30Min_SPY;
MS_D=C_5Min_SPY<SP_SPY AND C_5Min_SPY<MS AND O_SPY<C_5Min_SPY AND C_5Min_SPY<NL AND  C_5Min_SPY<C_30Min_SPY;
MS_UND=IIf(MS_U==1,1,IIf(MS_D==1,-1,0));
printf("market UND: [1 0 -1]"+"\t"+MS_UND+"\n");
_SECTION_END();


_SECTION_BEGIN("PLOT"); 

Plot(O_SPY,"SPY",colorWhite,styleCloud);
Plot(SP_SPY,"SP_SPY",colorGrey50,styleThick);
Plot(C_30Min_SPY,"C_30Min_SPY",colorLightBlue,styleStaircase);
Plot(C_5Min_SPY,"5Min_SPY",colorBlue,styleStaircase);
Plot(MS,"MS",colorYellow,styleThick);
//Plot(NL,"NL",colorBlue,styleThick);
Plot(BS_point,"BS_point",colorLime,styleThick);
//Plot(mysignal,"mysignal",colorRose,styleStaircase);
//Plot(mysignal_bbt,"mysignal-HHV",colorLightBlue,styleStaircase);
//Plot(mysignal_bbb,"mysignal-LLV",colorLightBlue,styleStaircase);
//Plot(myspread,"mysignal-z",colorLightGrey,styleLeftAxisScale);
//Plot(myspread_bbb,"myspread",colorYellow,styleLeftAxisScale);
//plot(myspread_bbt,"myspread-z",colorYellow,styleLeftAxisScale);
plot(MS_UND,"MS_UND",colorLightBlue,styleLeftAxisScale);
_SECTION_END();


_SECTION_BEGIN("signal"); 

ibc = GetTradingInterface("IB");
averageprice=ibc.GetPositionInfo(ABName, "Avg. cost");
IBPosSize = ibc.GetPositionSize(ABName);
printf("average price:"+"\t"+averageprice+"\n");
printf("position list:"+"\t"+IBPosSize+"\n");

//BS_point should be above SP_SPY for buy market. Below indicates sell short as momentum
B=MS_UND==0 AND BS_point>SP_SPY AND (mysignal<mysignal_bbb+0.01 OR mysignal<myspread_bbb+0.01) AND (O_SPY>C_5Min_SPY-0.05 AND O_SPY<C_5Min_SPY) AND C_5Min_SPY<C_30Min_SPY-0.15 AND O_SPY<BS_point-0.15;//// reversion in Normal range
SS=MS_UND==1 AND BS_point>SP_SPY AND (mysignal>mysignal_bbt-0.01 OR mysignal>myspread_bbt-0.01) AND (O_SPY<C_5Min_SPY+0.1 AND O_SPY>C_5Min_SPY+0.05) AND C_5Min_SPY>C_30Min_SPY+0.05 AND O_SPY>BS_point+0.02;// reversion in Normal range


// BS_point above or below SP_SPY ?
// C_30Min_SPY above or below BS_point?
// C_5Min_SPY above or below MS?
 

S1=((Cross(O_SPY,BS_point+0.05) OR Cross(O_SPY,C_5Min_SPY+0.05))) AND (mysignal>4*(mysignal_bbt-mysignal_bbb)/5 OR mysignal>4*(myspread_bbt-myspread_bbb)/5) AND O_SPY-averageprice>=0.05;
S2=IBPosSize>0 AND  (MS_D==-1 or Cross(BS_point-0.05,O_SPY)) AND (mysignal<mysignal_bbb+0.01 OR mysignal<myspread_bbb+0.01) ;//loss
C1=(Cross(BS_point-0.05,O_SPY) OR Cross(C_5Min_SPY-0.05,O_SPY)) AND (mysignal<(mysignal_bbt-mysignal_bbb)/5 OR mysignal<(myspread_bbt-myspread_bbb)/5) AND  O_SPY-averageprice<=-0.05 ;
C2=IBPosSize<0 AND  (MS_D==1 OR Cross(O_SPY,BS_point+0.05)) AND (mysignal>mysignal_bbt-0.01 OR mysignal>myspread_bbt-0.01);//loss

Buy= B;// OR B2 ;
Short= SS;// OR SS2  ;
Cover=C1 OR C2;
Sell= S1 OR S2;

PlotShapes(IIf(Buy, shapeUpTriangle, shapeNone),colorGreen,1,L, Offset=-2);
PlotShapes(IIf(Short,shapeDownTriangle, shapeNone),colorRed, 1, H, Offset=2);
PlotShapes(IIf(Sell,shapeCircle, shapeNone),colorLime, 0, L, Offset=-2);
PlotShapes(IIf(Cover, shapeCircle, shapeNone),colorOrange, 0,H, Offset=2);


_SECTION_END();

_SECTION_BEGIN("Trade"); 
LastBuy = LastValue(buy);
LastShort = LastValue(short);
LastSell = LastValue(Sell);
LastCover = LastValue(cover);
e = Equity(1,0);
start = ParamDate( "Start Date", "2016-04-01" );
end=ParamDate("End Date", "2017-12-31" );
Lprofit = e - ValueWhen( Buy, e); 
Sprofit = e - ValueWhen( Short, e); 

BP= LastBuy;
SSP=LastShort ;
SP= LastSell;//list two for stocks, stop loss only for stocks 
CP= LastCover;
	
_SECTION_END();
/*

_SECTION_BEGIN("AMI-IB Trigger");
ibc = GetTradingInterface("IB");
IBcStatus = ibc.IsConnected();
OrderID = StaticVarGetText("OrderID"+ABName);
if (OrderID == "" && (LastBuy || LastShort))
{
    StaticVarSetText("OrderID"+ABName,"DUMMY");
}
OrderStatus = ibc.GetStatus( OrderID , True );
if( OrderStatus != "" ) StaticVarSetText("OrderStatus"+ABName,OrderStatus);
Pending=ibc.IsOrderPending(OrderID);
//SellPending=ibc.IsOrderPending(OrderID);
//printf("OrderID:"+"\t"+OrderID+"\n");
//printf("OrderStatus:"+"\t"+OrderStatus+"\n");
//printf("Pending:"+"\t"+Pending+"\n");
LastOrderID = StaticVarGetText("OrderID"+ABName);
OID = StaticVarGetText("OrderID"+ABName);
ORderStatus="";
IBcStatusString = WriteIf(IBCStatus==0,"TWS Not Found",WriteIf(IBCStatus==1,"Connecting to TWS",WriteIf(IBCStatus==2,"TWS OK",WriteIf(IBCStatus==3,"TWS OK (msgs)",""))));
if ( IBcStatus==2 )
{
	ibc = GetTradingInterface("IB");
	averageprice=ibc.GetPositionInfo(ABName, "Avg. cost");
	IBPosSize = ibc.GetPositionSize(ABName);
	Min_RTS=LastValue(GetRTDataForeign("Bid",ABName))-averageprice; 
	Min_RTC=averageprice-LastValue(GetRTDataForeign("Ask",ABName));
	Bsignal=IBPosSize==0 AND US_Trade_On AND  LastBuy;
	Ssignal=IBPosSize==1500 AND LastSell AND US_Trade_On;
	SSsignal=IBPosSize==0 AND US_Trade_On AND LastShort;
	CPsignal=IBPosSize==-1500 AND LastCover AND US_Trade_On;
	
	clean_n_hold=IBPosSize<0   AND Cross(TimeNum(),155500);
	clean_p_hold=IBPosSize>0  AND Cross(TimeNum(),155500);
	//further buy sell was at earlier version
	
	BC=Bsignal OR CPsignal OR clean_n_hold;
	SS=SSsignal OR Ssignal OR clean_p_hold;
	

	if(LastValue(BC))  //BUY

    {
		if(LastValue(Bsignal) OR LastValue(CPsignal))
		{
			OID= ibc.PlaceOrder( ABName, "BUY",1500, "MKT",0, 0, "IOC", True); //size for general case
		}
		if(LastValue(clean_n_hold))
		{
			OID= ibc.PlaceOrder( ABName, "BUY",abs(IBPosSize), "MKT",0, 0, "IOC", True); //size for general case
		}
        OrderStatus = ibc.GetStatus( OID, True);
        if(OrderStatus == "Filled"){
        StaticVarSetText("OrderID"+ABName,OID);
        }

		for (dummy=0; dummy<40; dummy++) ibc.Sleep(50);  //Usually takes up to about a second for TWS to get acknowledgement from IB
        tradetime=GetPerformanceCounter()/1000; 
            while ((GetPerformanceCounter()/1000 - tradetime) <25) // give up after 25 seconds
             {
                 ibc.Reconnect();  //Refreshes ibc, and gets accurate status
                 //ORderStatus = ibc.GetStatus( OID, True);
                 if (OrderStatus == "PreSubmitted" || OrderStatus == "Submitted" || OrderStatus == "Filled")
                     break;
             }
                   

    }


    if(LastValue(SS))  //SHORT SELL
    {

		if(LastValue(SSsignal) OR LastValue(Ssignal))
		{
		    OID= ibc.PlaceOrder(ABName, "SELL",1500, "MKT",0, 0, "IOC", True); ////size for general case
		}
		if(LastValue(clean_p_hold))
		{
			OID= ibc.PlaceOrder( ABName, "SELL",abs(IBPosSize), "MKT",0, 0, "IOC", True); //size for general case
		}

        OrderStatus = ibc.GetStatus( OID, True);
        if(OrderStatus == "Filled"){
			StaticVarSetText("OrderID"+ABName,OID);
        }
               
		for (dummy=0; dummy<40; dummy++) ibc.Sleep(50);  //Usually takes up to about a second for TWS to get acknowledgement from IB
		tradetime=GetPerformanceCounter()/1000; 
			while ((GetPerformanceCounter()/1000 - tradetime) <25) // give up after 5 seconds
			{
                 ibc.Reconnect();  //Refreshes ibc, and gets accurate status
                 //ORderStatus = ibc.GetStatus( OID, True);
                 if (OrderStatus == "PreSubmitted" || OrderStatus == "Submitted" || OrderStatus == "Filled")
                     break;
            }
        
                   

    }
ibc.ClearList(4);//error list clearing
  //Exploration
//IBcStatusString = WriteIf(IBCStatus==0,"TWS Not Found",WriteIf(IBCStatus==1,"Connecting to TWS",WriteIf(IBCStatus==2,"TWS OK",WriteIf(IBCStatus==3,"TWS OK (msgs)",""))));
//LastOrderID = StaticVarGetText("OrderID"+ABName);
//OrderStatus = ibc.GetStatus( LastOrderID , True );

if( OrderStatus != "" ) StaticVarSetText("OrderStatus"+ABName,ORderStatus);


}

Filter=(Buy OR Short OR Sell OR Cover) AND LastOrderID!="DUMMY";// AND  Status("lastbarinrange");
AddTextColumn(FullName(),"name",200);
AddColumn(Buy,"Buy",1.0);
AddColumn(Short,"Short",1.0);
AddColumn(Sell,"Sell",1.0);
AddColumn(Cover,"Cover",1.0);
AddColumn(IIf(SubmitOrders,Asc("Y"),Asc("N")),"Transmit",formatChar);
AddColumn(IIf(Buy OR Cover,Asc("L"),IIf(Short OR Sell,Asc("S"),Asc(" "))),"Buy/Sell",formatChar);
AddColumn(IIf(Buy,BuyPrice,ShortPrice),"Entry",1.2);
AddTextColumn(IBcStatusString,"IBC Status",100);

_SECTION_END();


_SECTION_BEGIN("Alert"); 

//AlertIf( Buy, "EMAIL", "Buy Alert in "+FullName()+ "@"+BuyPrice,1 );

//AlertIf( Sell, "EMAIL", "Sell Alert in "+FullName()+ "@"+SellPrice,1 );

//AlertIf( Short, "EMAIL", "Short Alert in "+FullName()+ "@"+ShortPrice,3 );

//AlertIf( Cover, "EMAIL", "Short Alert in "+FullName()+ "@"+CoverPrice,3 );

_SECTION_END();






