OptimizerSetEngine("cmae"); // we can use "spso" or "trib" here

_SECTION_BEGIN("Trading Set up");
//Filename = _DEFAULT_NAME();
SubmitOrders = True; 
Tracing = False;    
MarketON=093000;
US_Trade_On=TimeNum() >= 094000 AND TimeNum() <=154500;
printf("US_Trade_On:"+"\t"+US_Trade_On+"\n");
ABName="SPY";//IBName =Name();//getfndata("Alias");
Bars_so_far_today = 1 + BarsSince( Day() != Ref(Day(), -1));
printf("Bars already for today:"+"\t"+Bars_so_far_today+"\n");
_SECTION_END();

_SECTION_BEGIN("SPY-Variables");
SetForeign(ABName);
O_SPY = O;
H_SPY = H;
L_SPY = L;
C_SPY = C;
v_SPY = IIf(V==0,1,Volume);
RestorePriceArrays();

// Useful to find state of market
C_YDay_SPY = TimeFrameGetPrice("C_SPY", inDaily, -1); // yesterdays close https://www.amibroker.com/guide/h_timeframe.html
H_YDay_SPY = TimeFrameGetPrice("H_SPY", inDaily, -1);
L_YDay_SPY = TimeFrameGetPrice("L_SPY", inDaily, -1);
C_5Min_SPY=TimeFrameGetPrice("C_SPY", in5minute, -1);// TimeFrameExpand( ma5_13, in5Minute)
L_5Min_SPY=TimeFrameGetPrice("L_SPY",in5minute, -1);// TimeFrameExpand( ma5_13, in5Minute)
H_5min_SPY=TimeFrameGetPrice("H_SPY",in5minute,-1);
O_5min_SPY=TimeFrameGetPrice("O_SPY",in5minute,-1);

//######Sentiment,MS,MS_change,ND and ACTV
	//Normalization
SP_SPY=ValueWhen(Bars_so_far_today==600,O);
printf("Start price %g\n",SP_SPY);
UL=H_YDay_SPY; 
LL=L_YDay_SPY;
NL=(UL+LL)/2;
//Useful to find active market
price=(Ref(H_SPY,-1)+Ref(L_SPY,-1)+Ref(C_SPY,-1))/3;
//B is similar to price
B=(HHV(H_SPY,60) + HHV(H_SPY-L_SPY,60)+LLV(L_SPY,60) + LLV(H_SPY-L_SPY,60))/2;
R1=price*2-Ref(L_SPY,-1);
R2=price+(Ref(H_SPY,-1)-Ref(L_SPY,-1));
S1=price*2-Ref(H_SPY,-1);
S2=price-(Ref(H_SPY,-1)-Ref(L_SPY,-1));
ND=O_SPY/SP_SPY;
//ACTIVE market. see previous version SPY_1403
ACTV=v_SPY>50 AND v_SPY>MA(v_SPY,60)*0.75;

//MARKET STATE == MS. No trade at 0 state . MS==4 is extremely up and 1 is extremely down
MS=IIf(SP_SPY>UL,4,IIf(SP_SPY>NL AND SP_SPY<UL,3,IIf(SP_SPY<NL AND SP_SPY>LL,2,IIf(SP_SPY<LL,1,0))));
printf("op mkt state %g\n",MS);//
MS_pr=IIf(O_SPY>=UL,4,IIf(O_SPY>=NL AND O_SPY<UL,3,IIf(O_SPY<NL AND O_SPY>=LL,2,IIf(O_SPY<LL,1,0))));
printf("pr mkt state %g\n",MS_pr);//
MS_change=MS_pr-MS;
printf("mkt state chg %g\n",MS_change);//


// SENTIMENT 
opening_jump=SP_SPY-C_YDay_SPY;
present_jump=opening_jump+O_SPY-SP_SPY;
sentiment=present_jump/opening_jump;
printf("sentiment %g\n",sentiment);
// VELOCITY
// velocity per 5m above 0.25 is high speed.  
velocity_5m=(O_SPY-Ref(O_SPY,-60))/0.25;
velocity=Sum(IIf(velocity_5m>1,1,IIf(velocity_5m<-1,-1,0)),60);
printf("velocity %g\n",velocity);

//MS_index=IIf(MS_pr==4,(O_SPY-UL)*(O_SPY-SP_SPY)/opening_jump,IIf(MS_pr==3,(O_SPY-NL)*(O_SPY-SP_SPY)/opening_jump,IIf(MS==2,(O_SPY-LL)*(O_SPY-SP_SPY)/opening_jump,(LL-O_SPY)*(O_SPY-SP_SPY)/opening_jump)));
MS_index=IIf(MS_pr==4,(O_SPY-UL)*(sentiment+velocity+MS_change)+4/(UL-SP_SPY-opening_jump),IIf(MS_pr==3,(O_SPY-NL)*(sentiment+velocity+MS_change)+3/(NL-SP_SPY-opening_jump),IIf(MS==2,(O_SPY-LL)*(sentiment+velocity+MS_change)+2/(LL-SP_SPY-opening_jump),(O_SPY-LL)*(sentiment+velocity+MS_change)+1/(LL-SP_SPY-opening_jump))));
MS_index_z=(MS_index - MA(MS_index,60 ) ) / StDev(MS_index,60);

// In 30 min window how many up or down. If up is more then market is up ward and if down is more then market downward. 

MS_freq=Sum(IIf(MS_index_z>2,1,IIf(MS_index_z<-2,-1,0)),60);
printf("Up/Dn market %g\n",MS_freq);

// if MS_change =<0 and MS_freq<0 then down market sell at MS_index_down and buy at MS_index_up. 
// if MS_change=>0 and MS_feeq>0 then up market. Buy at MS_index_down and sell at MS_index_up.

rev_p=sentiment>5 OR velocity>10;
rev_n=sentiment<-5 OR velocity<-10;
Bars_since_rev_p = 1 + BarsSince(rev_p==1);
Bars_since_rev_p =IIf(Bars_since_rev_p>30,0,Bars_since_rev_p);
Bars_since_rev_n = 1 + BarsSince(rev_n==1);
Bars_since_rev_n =IIf(Bars_since_rev_n>30,0,Bars_since_rev_n);

//### mean reversion indicators for MR
// Distance
D=O_SPY-SP_SPY;
D=(D- MA(D,60 ) ) / StDev(D,60);
//prediction of Y by ML. Y will be >1, <-1 or 0
Y=sum(O_SPY-Ref(O_SPY,-1),60)/0.25;
Y=(Y - MA(Y,60 ) ) / StDev(Y,60);
//VWAP spread
totalVolume = Sum(Ref(v_SPY,-1),12);
VWAP = Sum (price *Ref(v_SPY,-1),12) /totalVolume;
//# price and VWAP difference
spread=O_SPY-VWAP;
spread=(spread - MA(spread,60 ) ) / StDev(spread,60);
// Regression spread
OLS_spread=Sum(O_SPY-(LinRegIntercept(O_SPY,60)+LinRegSlope(O_SPY, 60 )*O_SPY),60);
OLS_spread=(OLS_spread - MA(OLS_spread,60 ) ) / StDev(OLS_spread,60);

mr_top=D>2 OR Y>2 OR spread>2 OR OLS_spread>2;
mr_bot=D<-2 OR Y<-2 OR spread<-2 OR OLS_spread<-2;


_SECTION_END();



_SECTION_BEGIN("OPTIMIZATION"); //##//SPY//
//inv_SPY=Optimize("investment",45000,30000,60000,1000 );
_SECTION_END();

_SECTION_BEGIN("SPY STRATEGY");//HEDGING by SPXL,SPXU,SPXS 2000K amount for 23 SPY ( approximation)

//#retracement 24%,38%,50%,62% and 124%. Not considered 

//sentiment,velocity,red,green,MS_index,MS_freq these are 6 indicators to find trend(upward,downward,neutral),state(buy/sell) and reversal( from top, bottom)

MKT_upward=MS_freq>10 AND sentiment<2 AND velocity<10 AND sentiment>0 AND velocity>=0;
MKT_dnward=MS_freq<-10 AND sentiment>-2.5 AND velocity>-10 AND sentiment<0 AND velocity<=0;
MKT_neutral=abs(MS_freq)<5 AND abs(sentiment)<2.5 AND abs(velocity)<4;

reversal_sell=sentiment>5 OR velocity>10 or MS_freq>25;//sell at this point
reversal_buy=sentiment<-5 OR velocity<-10 or MS_freq<-25;

red=VWAP>B AND mr_top;// market will be up for momentum or will be down from MR
green=VWAP<B AND mr_bot;
printf("top:red %g\n",red);
printf("bot:geen %g\n",green);

BC_1200=(MS_index>20 OR MS_freq>25 OR velocity>12 OR sentiment>5);
SC_1200=(MS_index<-10 OR MS_freq<-15 OR velocity<-8 OR sentiment<-2.5) ;
SSC_1200=(MS_index<-20 OR MS_freq<-25 OR velocity<-12 OR sentiment<-5);
CC_1200=(MS_index>10 OR MS_freq>15 OR velocity>8 OR sentiment>2.5);

//Market upward, then no sell
// OSZ==1200
BC1=MKT_upward==1 AND green==1  AND ACTV==1;//OSZ==500
SC1= red==1;

//Market downward, then no buy
SSC1= MKT_dnward==1 AND red==1 AND ACTV==1;
CC1=green==1;

//Market neutral
 
BC2=MKT_neutral==1 AND green==1 AND ACTV==1;
SSC2=MKT_neutral==1 AND red==1 AND ACTV==1;

BC3= (BC1 OR BC2);
SSC3=(SSC1 OR SSC2);

Bars_since_BC3 = 1 + BarsSince(BC3==1);
Bars_since_BC3=IIf(Bars_since_BC3>30,0,Bars_since_BC3);
price_diff_since_BC3=O_SPY-Ref(O_SPY,-Bars_since_BC3);
Bars_since_SSC3 = 1 + BarsSince(SSC3==1);
Bars_since_SSC3=IIf(Bars_since_SSC3>30,0,Bars_since_SSC3);
price_diff_SSC3=O_SPY-Ref(O_SPY,-Bars_since_SSC3);

BP1=BC_1200 AND Cross(MA(O_SPY,3),MA(O_SPY,12)) AND InWatchList(0);
BP2=BC3 AND Cross(MA(O_SPY,3),MA(O_SPY,12)) AND InWatchList(0);
SSP1=SSC_1200 AND Cross(MA(O_SPY,12),MA(O_SPY,3)) AND ACTV AND InWatchList(0);
SSP2= SSC3 AND Cross(MA(O_SPY,12),MA(O_SPY,3)) AND InWatchList(0);
SP1=SC_1200 AND Cross(MA(O_SPY,12),MA(O_SPY,3)) AND InWatchList(0);
SP2=Cross(price_diff_since_BC3,0.08);
CP1=CC_1200 AND Cross(MA(O_SPY,3),MA(O_SPY,12)) AND InWatchList(0);
CP2=Cross(-0.08,price_diff_SSC3);


OSZ1=1200;
OSZ2=500;
OSZ=IIf(BP1==1 OR SSP1,OSZ1,OSZ2);
OSZ=LastValue(OSZ);
//Param("order size",100,50,200);//LastValue(inv_SPY/C_SPY);
			//ACT==signal
			// Buy Classification(BC): (1) ACTV_B==1 (2) O_SPY<DT (3) DT>LL and DT<NL (4) Angle of DT not stiff
			// Short Sell Classification: (1) ACTV_SS==1 (2) O_SPY>UT (3) UT>NL and UT<UL (4) angle of UT not stiff
			// (1)DT<LL and (2) stiff angle leads to SPXS buy(2000). Assumed long position of SPY (OSZ)
			// (2) UT>UL and (2) stiff angle leads to SPXL buy(100). Assumed short position of SPY (-OSZ)
_SECTION_END();  


_SECTION_BEGIN("IBC variables");//HEDGING by SPXL,SPXU,SPXS 20K amount for 500 SPY ( approximation)
ibc = GetTradingInterface("IB");
averageprice=ibc.GetPositionInfo(ABName, "Avg. cost");
IBPosSize = ibc.GetPositionSize(ABName);
printf("average price:"+"\t"+averageprice+"\n");
printf("position list:"+"\t"+IBPosSize+"\n");
_SECTION_END();	
	

_SECTION_BEGIN("SIGNAL");


// When SPY is above/below the open price ( XXXOP) by 1.5( use data science)  then change os state
// momentum and MR with ROC and spread at range 
//#momentum indicator based
//Signal gap== 2min and buy signal should below previous sell price or SS should be above last cover price
//bi = BarIndex();
//arrayitem = SelectedValue( bi ) - bi[ 0 ]; 
//"Close at selected bar:" + C_SPY[ arrayitem ];

//list three for rated 5 stocks
//list four stocks are technical based for both buy or sell

//Acount cutout not included AND AccountCutout==1
//AND US_Trade_On


//Buy=ExRem(Buy,Sell);
//sell=ExRem(Sell,Buy);
//short=ExRem(Short,cover);
//cover=ExRem(cover,Short);


	//size=IIf( (LastBuy OR  LastShort),OSZ,abs(OSZ)); 
Buy= BP1 OR BP2;
Sell= SP1 OR SP2;
Short= SSP1 OR SSP2;
Cover= CP1 OR CP2;
LastBuy = LastValue(Buy);
LastShort = LastValue(Short);
LastSell = LastValue(Sell);
LastCover = LastValue(Cover);
e = Equity(1,0);
start = ParamDate( "Start Date", "2016-04-01" );
end=ParamDate("End Date", "2017-12-31" );
Lprofit = e - ValueWhen( Buy, e); 
Sprofit = e - ValueWhen( Short, e); 

BP= LastBuy;
SSP=LastShort ;
SP= LastSell;//list two for stocks, stop loss only for stocks 
CP= LastCover;
	
_SECTION_END();

_SECTION_BEGIN("PLOT"); 
//Plot(O_SPY, "Open", IIf(_short, colorLime,IIf(SSC2,colorOrange,IIf(BC1,colorDarkGreen,IIf(SSC1,colorDarkRed,colorWhite)))), styleThick);
Plot(O_SPY, "Open", IIf(MKT_upward, colorLime,IIf(MKT_dnward,colorOrange,colorGrey40)), styleLine);
//Plot(O_SPY, "Open",colorBlueGrey,styleLine);
Plot(MS_index, "MS_index",colorBlueGrey, styleLeftAxisScale);
Plot(MS_freq,"MS_freq",colorlightBlue,styleLeftAxisScale);
Plot(velocity,"velocity",colorLightYellow,styleLeftAxisScale);
Plot(sentiment,"sentiment",colorWhite,styleLeftAxisScale);
PlotShapes(IIf(buy, shapeHollowCircle, shapeNone),colorGreen,1,L, Offset=-2);
PlotShapes(IIf(SSP1 OR SSP2,shapeHollowCircle, shapeNone),colorRed, 1, H, Offset=2);
PlotShapes(IIf(sell,shapeCircle, shapeNone),colorLime, 0, L, Offset=-2);
PlotShapes(IIf(cover, shapeCircle, shapeNone),colorOrange, 0,H, Offset=2);
//Plot(e,"Equity",colorlightBlue,styleLeftAxisScale);
_SECTION_END();

_SECTION_BEGIN("AMI-IB Trigger");
ibc = GetTradingInterface("IB");
IBcStatus = ibc.IsConnected();
OrderID = StaticVarGetText("OrderID"+ABName);
if (OrderID == "" && (LastBuy || LastShort))
{
    StaticVarSetText("OrderID"+ABName,"DUMMY");
}
OrderStatus = ibc.GetStatus( OrderID , True );
if( OrderStatus != "" ) StaticVarSetText("OrderStatus"+ABName,OrderStatus);
Pending=ibc.IsOrderPending(OrderID);
//SellPending=ibc.IsOrderPending(OrderID);
//printf("OrderID:"+"\t"+OrderID+"\n");
//printf("OrderStatus:"+"\t"+OrderStatus+"\n");
//printf("Pending:"+"\t"+Pending+"\n");
LastOrderID = StaticVarGetText("OrderID"+ABName);
ORderStatus="";
IBcStatusString = WriteIf(IBCStatus==0,"TWS Not Found",WriteIf(IBCStatus==1,"Connecting to TWS",WriteIf(IBCStatus==2,"TWS OK",WriteIf(IBCStatus==3,"TWS OK (msgs)",""))));
if ( IBcStatus==2 )
{
	ibc = GetTradingInterface("IB");
	averageprice=ibc.GetPositionInfo(ABName, "Avg. cost");
	IBPosSize = ibc.GetPositionSize(ABName);
	Min_RTS=LastValue(GetRTDataForeign("Bid",ABName))-averageprice; 
	Min_RTC=averageprice-LastValue(GetRTDataForeign("Ask",ABName));
	minSProfit=Min_RTS>0.05;
	minCProfit=Min_RTC>0.05;
	BP= (IBPosSize==0 OR IBPosSize==1200) AND US_Trade_On AND LastBuy;
	SP=(IBPosSize>=500 AND Min_RTS>0.05 AND LastSell AND US_Trade_On);
	SSP= (IBPosSize==0 OR IBPosSize==-1200) AND US_Trade_On AND LastShort;
	CP=(IBPosSize<=-500 AND Min_RTC>0.05 AND LastCover AND US_Trade_On);
	stoploss_n_hold= LastValue(reversal_buy)  AND IBPosSize<=-500 AND Min_RTS>0.1  AND US_Trade_On;
	stoploss_p_hold= LastValue(reversal_sell) AND IBPosSize>=500 AND Min_RTC>0.1  AND US_Trade_On;
	//further buy sell was at earlier version
	
	BC=BP OR CP OR stoploss_n_hold;
	SS=SSP OR SP OR stoploss_p_hold;
	

	if(LastValue(BC))  //BUY

    {
		if(LastValue(IBPosSize==1200) AND LastValue(BP))
		{
			OID= ibc.PlaceOrder( ABName, "BUY",OSZ2, "MKT",0, 0, "IOC", True); //size for general case
		}
		if(LastValue(stoploss_n_hold==1))
		{
			OID= ibc.PlaceOrder( ABName, "BUY",OSZ1+abs(IBPosSize), "MKT",0, 0, "IOC", True); //size for general case
		}
		if(LastValue(CP))
		{
			OID= ibc.PlaceOrder( ABName, "BUY",abs(IBPosSize), "MKT",0, 0, "IOC", True); //size for general case
		}
		else
			OID= ibc.PlaceOrder( ABName, "BUY",OSZ, "MKT",0, 0, "IOC", True); //size for general case
        OrderStatus = ibc.GetStatus( OID, True);
        if(OrderStatus == "Filled"){
        StaticVarSetText("OrderID"+ABName,OID);
        }

		for (dummy=0; dummy<40; dummy++) ibc.Sleep(50);  //Usually takes up to about a second for TWS to get acknowledgement from IB
        tradetime=GetPerformanceCounter()/1000; 
            while ((GetPerformanceCounter()/1000 - tradetime) <25) // give up after 25 seconds
             {
                 ibc.Reconnect();  //Refreshes ibc, and gets accurate status
                 //ORderStatus = ibc.GetStatus( OID, True);
                 if (OrderStatus == "PreSubmitted" || OrderStatus == "Submitted" || OrderStatus == "Filled")
                     break;
             }
                   

    }


    if(LastValue(SS))  //SHORT SELL
    {
		if(LastValue(IBPosSize==-1200) AND LastValue(BP)){
		    OID= ibc.PlaceOrder(ABName, "SELL",OSZ2, "MKT",0, 0, "IOC", True); ////size for general case
		    }
		if(LastValue(stoploss_p_hold)==1)
		{
		    OID= ibc.PlaceOrder(ABName, "SELL",OSZ1+abs(IBPosSize), "MKT",0, 0, "IOC", True); ////size for general case
		    }
		if(LastValue(SP))
		{
			OID= ibc.PlaceOrder( ABName, "SELL",abs(IBPosSize), "MKT",0, 0, "IOC", True); //size for general case
			}
		else
		    OID= ibc.PlaceOrder(ABName, "SELL",OSZ, "MKT",0, 0, "IOC", True); ////size for general case   
        OrderStatus = ibc.GetStatus( OID, True);
        if(OrderStatus == "Filled"){
			StaticVarSetText("OrderID"+ABName,OID);
        }
               
		for (dummy=0; dummy<40; dummy++) ibc.Sleep(50);  //Usually takes up to about a second for TWS to get acknowledgement from IB
		tradetime=GetPerformanceCounter()/1000; 
			while ((GetPerformanceCounter()/1000 - tradetime) <25) // give up after 5 seconds
			{
                 ibc.Reconnect();  //Refreshes ibc, and gets accurate status
                 //ORderStatus = ibc.GetStatus( OID, True);
                 if (OrderStatus == "PreSubmitted" || OrderStatus == "Submitted" || OrderStatus == "Filled")
                     break;
            }
        
                   

    }
ibc.ClearList(4);//error list clearing
  //Exploration
//IBcStatusString = WriteIf(IBCStatus==0,"TWS Not Found",WriteIf(IBCStatus==1,"Connecting to TWS",WriteIf(IBCStatus==2,"TWS OK",WriteIf(IBCStatus==3,"TWS OK (msgs)",""))));
//LastOrderID = StaticVarGetText("OrderID"+ABName);
//OrderStatus = ibc.GetStatus( LastOrderID , True );

if( OrderStatus != "" ) StaticVarSetText("OrderStatus"+ABName,ORderStatus);


}

Filter=(Buy OR Short OR Sell OR Cover) AND LastOrderID!="DUMMY";// AND  Status("lastbarinrange");
AddTextColumn(FullName(),"name",200);
AddColumn(Buy,"Buy",1.0);
AddColumn(Short,"Short",1.0);
AddColumn(Sell,"Sell",1.0);
AddColumn(Cover,"Cover",1.0);
AddColumn(IIf(SubmitOrders,Asc("Y"),Asc("N")),"Transmit",formatChar);
AddColumn(IIf(Buy OR Cover,Asc("L"),IIf(Short OR Sell,Asc("S"),Asc(" "))),"Buy/Sell",formatChar);
AddColumn(IIf(Buy,BuyPrice,ShortPrice),"Entry",1.2);
AddTextColumn(IBcStatusString,"IBC Status",100);

_SECTION_END();


_SECTION_BEGIN("Alert"); 

//AlertIf( Buy, "EMAIL", "Buy Alert in "+FullName()+ "@"+BuyPrice,1 );

//AlertIf( Sell, "EMAIL", "Sell Alert in "+FullName()+ "@"+SellPrice,1 );

//AlertIf( Short, "EMAIL", "Short Alert in "+FullName()+ "@"+ShortPrice,3 );

//AlertIf( Cover, "EMAIL", "Short Alert in "+FullName()+ "@"+CoverPrice,3 );

_SECTION_END();

_SECTION_BEGIN("Volume1");
Plot( Volume, _DEFAULT_NAME(), ParamColor("Color", colorBlueGrey ), ParamStyle( "Style", styleHistogram | styleOwnScale | styleThick, maskHistogram  ) );
_SECTION_END();